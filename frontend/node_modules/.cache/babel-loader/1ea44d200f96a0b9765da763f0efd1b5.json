{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\Post\\\\PostContainer.js\";\nimport React from \"react\";\nimport styles from \"../../App.module.css\";\nimport anonym from \"../../icons/anonym.png\";\nimport professional from \"../../icons/professional.png\";\nimport amateur from \"../../icons/amateur.png\";\nimport duration from \"../../icons/duration.png\";\nimport reps from \"../../icons/reps.png\";\nimport Settings from \"../Settings/Settings\";\nimport { getLatestExercises } from \"../../actions/posts\";\nimport { getMusclegroups } from \"../../actions/musclegroups\";\nimport { getSingleWorkout, getSingleExercise, updateExercise, updateWorkout, deleteExercise, deleteWorkout } from \"../../actions/posts\";\nvar postData = \"\";\nconst months = [\"januar\", \"februar\", \"mars\", \"april\", \"mai\", \"juni\", \"juli\", \"august\", \"september\", \"oktober\", \"november\", \"desember\"];\n\nclass PostContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterFound = () => {\n      var match = \"\";\n      postData.exercises && this.state.exercises.forEach(a => this.state.filter === a.title && (!postData.exercises.includes(this.state.filter) || this.state.removeRelations.includes(this.state.filter)) && !this.state.postFilters.includes(this.state.filter) ? match = a.title : \"\");\n      !postData.exercises && postData.musclegroups && this.state.musclegroups.forEach(a => this.state.filter === a.name && (!postData.musclegroups.includes(this.state.filter) || this.state.removeRelations.includes(this.state.filter)) && !this.state.postFilters.includes(this.state.filter) ? match = a.name : \"\");\n      return match;\n    };\n\n    this.state = {\n      loading: true,\n      editing: false,\n      content: \"\",\n      newRelations: \"\",\n      removeRelations: \"\",\n      filter: \"\",\n      musclegroups: {},\n      exercises: {},\n      postFilters: [],\n      visibility: true\n    };\n  }\n\n  componentDidMount() {\n    this.getPost();\n    window.scrollTo(0, 0);\n    this.props.setRoute();\n    this.getMeta();\n  }\n\n  getMeta() {\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data\n    }));\n    getLatestExercises().then(data => this.setState({\n      exercises: data\n    }));\n  }\n\n  getPost() {\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\n      getSingleWorkout(window.location.href.split(\"?\")[0].split(\"posts/\")[1]).then(data => postData = data).then(() => this.setState({\n        loading: false\n      })).then(() => this.setState({\n        content: postData.content\n      }));\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\n      getSingleExercise(window.location.href.split(\"?\")[0].split(\"posts/\")[1]).then(data => postData = data).then(() => this.setState({\n        loading: false\n      })).then(() => this.setState({\n        content: postData.content\n      }));\n    }\n  }\n\n  updatePost() {\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\n      updateWorkout(window.location.href.split(\"?\")[0].split(\"posts/\")[1], this.state.content, this.state.newRelations, this.state.removeRelations).then(() => this.forceUpdate());\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\n      updateExercise(window.location.href.split(\"?\")[0].split(\"posts/\")[1], this.state.content, this.state.newRelations, this.state.removeRelations).then(() => this.forceUpdate());\n    }\n\n    this.setState({\n      editing: false\n    });\n  }\n\n  deletePost() {\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\n      deleteWorkout(window.location.href.split(\"?\")[0].split(\"posts/\")[1]);\n      this.props.onDelete();\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\n      deleteExercise(window.location.href.split(\"?\")[0].split(\"posts/\")[1]);\n      this.props.onDelete();\n    }\n  }\n\n  addFilter() {\n    if (this.filterFound()) {\n      if (this.state.removeRelations.split(\" \").filter(a => a === this.state.filter).length === 0) {\n        this.setState({\n          newRelations: this.state.newRelations + \" \" + this.filterFound()\n        });\n        this.setState({\n          postFilters: [...this.state.postFilters, this.state.filter],\n          filter: \"\"\n        });\n      } else {\n        this.setState({\n          removeRelations: this.state.removeRelations.replace(\" \" + this.state.filter, \"\"),\n          filter: \"\"\n        });\n      }\n    }\n  }\n\n  removeFilter(filter) {\n    var oldIds = this.state.newRelations.split(\" \").slice(1);\n    var newFilters = [];\n    var newIds = \"\";\n    oldIds.splice(this.state.postFilters.indexOf(filter), 1);\n    oldIds.forEach(id => newIds = newIds + \" \" + id);\n    this.state.postFilters.forEach(a => a !== filter ? newFilters.push(a) : \"\");\n    this.setState({\n      postFilters: newFilters,\n      newRelations: newIds\n    });\n  }\n\n  render() {\n    console.log(\"add: \" + this.state.newRelations);\n    console.log(\"remove: \" + this.state.removeRelations);\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Settings, {\n      showInfo: true,\n      user: this.props.user,\n      goHome: () => this.props.homeButton(),\n      login: () => this.props.onLogin(),\n      info: () => this.props.onInfo(),\n      newExercise: () => this.newExercise(),\n      newWorkout: () => this.newWorkout(),\n      creatingNewExercise: this.state.newExercise,\n      creatingNewWorkout: this.state.newWorkout,\n      hideExercises: () => this.setState({\n        hideWorkouts: !this.state.hideExercises ? false : this.state.hideWorkouts,\n        hideExercises: !this.state.hideExercises\n      }),\n      hideWorkouts: () => this.setState({\n        hideExercises: !this.state.hideWorkouts ? false : this.state.hideExercises,\n        hideWorkouts: !this.state.hideWorkouts\n      }),\n      hiddenExercises: this.state.hideExercises,\n      hiddenWorkouts: this.state.hideWorkouts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mainHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, postData.title)), React.createElement(\"div\", {\n      className: styles.singlePostWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Exercise-it!\",\n      className: styles.iconLarge,\n      src: postData.user ? postData.userrole ? professional : amateur : anonym,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, postData.user ? postData.user : \"Anonym\")), React.createElement(\"div\", {\n      className: styles.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, parseInt(postData.date.slice(8, 10), 10) + \". \" + months[parseInt(postData.date.slice(5, 7), 10) - 1] + \" \" + postData.date.slice(0, 4)), postData.duration ? React.createElement(\"img\", {\n      alt: \"Exercise-it!\",\n      className: styles.iconInfo,\n      src: duration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }) : \"\", React.createElement(\"div\", {\n      className: styles.duration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, postData.duration ? postData.duration + \" min\" : \"\"), postData.reps && postData.sets && (postData.sets > 1 || postData.reps > 1) ? React.createElement(\"img\", {\n      alt: \"Exercise-it!\",\n      className: styles.iconInfoLeft,\n      src: reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }) : \"\", React.createElement(\"div\", {\n      className: styles.reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, postData.sets && postData.sets && (postData.sets > 1 || postData.reps > 1) ? postData.reps + \" rep. - \" + postData.sets + \" sett\" : \"\"), React.createElement(\"div\", {\n      className: styles.singlePostImage,\n      style: {\n        backgroundImage: \"url(\" + postData.image.toString().split(\"public\")[1] + \")\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), this.state.editing ? React.createElement(\"textarea\", {\n      value: this.state.content,\n      className: styles.inputFieldLarge,\n      onChange: change => this.setState({\n        content: change.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.state.content), \"    \", this.state.editing ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"filter\",\n      className: this.filterFound() ? styles.inputMedium : styles.inputMediumDisabled,\n      placeholder: window.location.href.split(\"?\")[1] === \"type=exercise\" ? \"Finn muskelgrupper\" : \"Finn øvelser\",\n      value: this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1),\n      onChange: change => this.setState({\n        filter: change.target.value\n      }),\n      onKeyPress: event => event.key === \"Enter\" ? this.addFilter() : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: this.filterFound() ? styles.buttonSmall : styles.buttonSmallDisabled,\n      onClick: () => this.addFilter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Velg\")) : '', React.createElement(\"div\", {\n      className: styles.rowSpace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, postData.exercises && postData.exercises.filter(a => !this.state.removeRelations.includes(a)).map(exercise => React.createElement(\"div\", {\n      className: styles.filterListPost,\n      onClick: () => this.state.editing && this.setState({\n        removeRelations: this.state.removeRelations + ' ' + exercise\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, exercise)), this.state.postFilters.length > 0 ? this.state.postFilters.map(filter => React.createElement(\"div\", {\n      className: styles.filterListPost,\n      onClick: () => this.state.editing && this.removeFilter(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, filter)) : '', postData.musclegroups.filter(a => !this.state.removeRelations.includes(a)).map(workout => React.createElement(\"div\", {\n      className: styles.filterListPurple,\n      onClick: () => window.location.href.split(\"?\")[1] === \"type=exercise\" && this.state.editing && this.setState({\n        removeRelations: this.state.removeRelations + ' ' + workout\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, workout))), this.props.user.username === postData.user || this.props.user.username === \"admin\" ? this.state.editing ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.edit,\n      onClick: () => this.updatePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"Lagre\"), \"/\", React.createElement(\"button\", {\n      className: styles.edit,\n      onClick: () => this.deletePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Slett\")) : React.createElement(\"button\", {\n      className: styles.edit,\n      onClick: () => this.setState({\n        editing: !this.state.editing\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Rediger\") : React.createElement(\"button\", {\n      className: this.state.visibility ? styles.buttonVis : styles.buttonNotVis,\n      onClick: () => this.setState({\n        visibility: !this.state.visibility\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, this.state.visibility ? \"Synlig\" : \"Skjult\"))))));\n  }\n\n}\n\nexport default PostContainer;","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/components/Post/PostContainer.js"],"names":["React","styles","anonym","professional","amateur","duration","reps","Settings","getLatestExercises","getMusclegroups","getSingleWorkout","getSingleExercise","updateExercise","updateWorkout","deleteExercise","deleteWorkout","postData","months","PostContainer","Component","constructor","props","filterFound","match","exercises","state","forEach","a","filter","title","includes","removeRelations","postFilters","musclegroups","name","loading","editing","content","newRelations","visibility","componentDidMount","getPost","window","scrollTo","setRoute","getMeta","then","data","setState","location","href","split","updatePost","forceUpdate","deletePost","onDelete","addFilter","length","replace","removeFilter","oldIds","slice","newFilters","newIds","splice","indexOf","id","push","render","console","log","user","homeButton","onLogin","onInfo","newExercise","newWorkout","hideWorkouts","hideExercises","container","mainHeader","singlePostWrapper","iconLarge","userrole","description","parseInt","date","iconInfo","sets","iconInfoLeft","singlePostImage","backgroundImage","image","toString","inputFieldLarge","change","target","value","text","inputMedium","inputMediumDisabled","charAt","toUpperCase","event","key","buttonSmall","buttonSmallDisabled","rowSpace","row","map","exercise","filterListPost","workout","filterListPurple","username","edit","buttonVis","buttonNotVis"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"../../App.module.css\";\r\nimport anonym from \"../../icons/anonym.png\";\r\nimport professional from \"../../icons/professional.png\";\r\nimport amateur from \"../../icons/amateur.png\";\r\nimport duration from \"../../icons/duration.png\";\r\nimport reps from \"../../icons/reps.png\";\r\nimport Settings from \"../Settings/Settings\";\r\n\r\nimport { getLatestExercises } from \"../../actions/posts\";\r\nimport { getMusclegroups } from \"../../actions/musclegroups\";\r\n\r\nimport {\r\n  getSingleWorkout,\r\n  getSingleExercise,\r\n  updateExercise,\r\n  updateWorkout,\r\n  deleteExercise,\r\n  deleteWorkout\r\n} from \"../../actions/posts\";\r\n\r\nvar postData = \"\";\r\n\r\nconst months = [\r\n  \"januar\",\r\n  \"februar\",\r\n  \"mars\",\r\n  \"april\",\r\n  \"mai\",\r\n  \"juni\",\r\n  \"juli\",\r\n  \"august\",\r\n  \"september\",\r\n  \"oktober\",\r\n  \"november\",\r\n  \"desember\"\r\n];\r\n\r\nclass PostContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      editing: false,\r\n      content: \"\",\r\n      newRelations: \"\",\r\n      removeRelations: \"\",\r\n      filter: \"\",\r\n      musclegroups: {},\r\n      exercises: {},\r\n      postFilters: [],\r\n      visibility: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPost();\r\n    window.scrollTo(0, 0);\r\n    this.props.setRoute();    \r\n    this.getMeta();\r\n  }\r\n\r\n  getMeta() {\r\n    getMusclegroups()\r\n      .then(data => this.setState({ musclegroups: data }))\r\n    getLatestExercises()\r\n      .then(data => this.setState({ exercises: data }))\r\n  }\r\n\r\n  getPost() {\r\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\r\n      getSingleWorkout(window.location.href.split(\"?\")[0].split(\"posts/\")[1])\r\n        .then(data => (postData = data))\r\n        .then(() => this.setState({ loading: false }))\r\n        .then(() => this.setState({ content: postData.content }));\r\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\r\n      getSingleExercise(window.location.href.split(\"?\")[0].split(\"posts/\")[1])\r\n        .then(data => (postData = data))\r\n        .then(() => this.setState({ loading: false }))\r\n        .then(() => this.setState({ content: postData.content }));\r\n    }\r\n  }\r\n\r\n  updatePost() {\r\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\r\n      updateWorkout(\r\n        window.location.href.split(\"?\")[0].split(\"posts/\")[1],\r\n        this.state.content, this.state.newRelations, this.state.removeRelations\r\n      ).then(() => this.forceUpdate());\r\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\r\n      updateExercise(\r\n        window.location.href.split(\"?\")[0].split(\"posts/\")[1],\r\n        this.state.content, this.state.newRelations, this.state.removeRelations\r\n      ).then(() => this.forceUpdate());\r\n    }\r\n\r\n    this.setState({ editing: false });\r\n  }\r\n\r\n  deletePost() {\r\n    if (window.location.href.split(\"?\")[1] === \"type=workout\") {\r\n      deleteWorkout(window.location.href.split(\"?\")[0].split(\"posts/\")[1]);\r\n      this.props.onDelete();\r\n    } else if (window.location.href.split(\"?\")[1] === \"type=exercise\") {\r\n      deleteExercise(window.location.href.split(\"?\")[0].split(\"posts/\")[1]);\r\n      this.props.onDelete();\r\n    }\r\n  }\r\n\r\n  filterFound = () => {\r\n    var match = \"\";\r\n    postData.exercises && this.state.exercises.forEach(a =>\r\n      this.state.filter === a.title && (!postData.exercises.includes(this.state.filter) ||\r\n       this.state.removeRelations.includes(this.state.filter)) && (!this.state.postFilters.includes(this.state.filter)) ? (match = a.title) : \"\"\r\n    );\r\n    !postData.exercises && postData.musclegroups && this.state.musclegroups.forEach(a =>\r\n      this.state.filter === a.name && (!postData.musclegroups.includes(this.state.filter) ||\r\n       this.state.removeRelations.includes(this.state.filter)) && (!this.state.postFilters.includes(this.state.filter)) ? (match = a.name) : \"\"\r\n    );\r\n      return match;\r\n    };\r\n    \r\n  addFilter() {\r\n    if (this.filterFound()) {\r\n      if (this.state.removeRelations.split(\" \").filter(a => a === this.state.filter).length === 0) {\r\n      this.setState({\r\n        newRelations: this.state.newRelations + \" \" + this.filterFound(),\r\n      });\r\n      this.setState({\r\n        postFilters: [...this.state.postFilters, this.state.filter],\r\n        filter: \"\",\r\n      });\r\n      }\r\n      else {\r\n      this.setState({\r\n        removeRelations: this.state.removeRelations.replace(\" \"+this.state.filter, \"\"),\r\n        filter: \"\",\r\n      });  \r\n      }\r\n    }\r\n  }\r\n\r\n  removeFilter(filter) {\r\n    var oldIds = this.state.newRelations.split(\" \").slice(1);\r\n    var newFilters = [];\r\n    var newIds = \"\";\r\n    oldIds.splice(this.state.postFilters.indexOf(filter), 1);\r\n    oldIds.forEach(id => (newIds = newIds + \" \" + id));\r\n\r\n    this.state.postFilters.forEach(a =>\r\n      a !== filter ? newFilters.push(a) : \"\"\r\n    );\r\n    this.setState({ postFilters: newFilters, newRelations: newIds });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"add: \" + this.state.newRelations);\r\n    console.log(\"remove: \" + this.state.removeRelations);\r\n    if (this.state.loading) {\r\n      return <div></div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Settings\r\n          showInfo\r\n          user={this.props.user}\r\n          goHome={() => this.props.homeButton()}\r\n          login={() => this.props.onLogin()}\r\n          info={() => this.props.onInfo()}\r\n          newExercise={() => this.newExercise()}\r\n          newWorkout={() => this.newWorkout()}\r\n          creatingNewExercise={this.state.newExercise}\r\n          creatingNewWorkout={this.state.newWorkout}\r\n          hideExercises={() =>\r\n            this.setState({\r\n              hideWorkouts: !this.state.hideExercises\r\n                ? false\r\n                : this.state.hideWorkouts,\r\n              hideExercises: !this.state.hideExercises\r\n            })\r\n          }\r\n          hideWorkouts={() =>\r\n            this.setState({\r\n              hideExercises: !this.state.hideWorkouts\r\n                ? false\r\n                : this.state.hideExercises,\r\n              hideWorkouts: !this.state.hideWorkouts\r\n            })\r\n          }\r\n          hiddenExercises={this.state.hideExercises}\r\n          hiddenWorkouts={this.state.hideWorkouts}\r\n        />\r\n        <div className={styles.container}>\r\n          <div>\r\n            <div className={styles.mainHeader}>\r\n              <h1>{postData.title}</h1>\r\n            </div>\r\n            <div className={styles.singlePostWrapper}>\r\n              <img\r\n                alt=\"Exercise-it!\"\r\n                className={styles.iconLarge}\r\n                src={\r\n                  postData.user\r\n                    ? postData.userrole\r\n                      ? professional\r\n                      : amateur\r\n                    : anonym\r\n                }\r\n              />\r\n              <div className={styles.title}>\r\n                <strong>{postData.user ? postData.user : \"Anonym\"}</strong>\r\n              </div>\r\n              <div className={styles.description}>\r\n                {parseInt(postData.date.slice(8, 10), 10) +\r\n                  \". \" +\r\n                  months[parseInt(postData.date.slice(5, 7), 10) - 1] +\r\n                  \" \" +\r\n                  postData.date.slice(0, 4)}\r\n              </div>\r\n              {postData.duration ? (\r\n                <img\r\n                  alt=\"Exercise-it!\"\r\n                  className={styles.iconInfo}\r\n                  src={duration}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className={styles.duration}>\r\n                {postData.duration ? postData.duration + \" min\" : \"\"}\r\n              </div>\r\n              {postData.reps &&\r\n              postData.sets &&\r\n              (postData.sets > 1 || postData.reps > 1) ? (\r\n                <img\r\n                  alt=\"Exercise-it!\"\r\n                  className={styles.iconInfoLeft}\r\n                  src={reps}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className={styles.reps}>\r\n                {postData.sets &&\r\n                postData.sets &&\r\n                (postData.sets > 1 || postData.reps > 1)\r\n                  ? postData.reps + \" rep. - \" + postData.sets + \" sett\"\r\n                  : \"\"}\r\n              </div>\r\n              <div\r\n                className={styles.singlePostImage}\r\n                style={{\r\n                  backgroundImage:\r\n                    \"url(\" + postData.image.toString().split(\"public\")[1] + \")\"\r\n                }}\r\n              />\r\n              {this.state.editing ? (\r\n                <textarea\r\n                  value={this.state.content}\r\n                  className={styles.inputFieldLarge}\r\n                  onChange={change =>\r\n                    this.setState({ content: change.target.value })\r\n                  }\r\n                />\r\n              ) : (\r\n                <div className={styles.text}>{this.state.content}</div>\r\n              )}    {this.state.editing ? (  <div>\r\n          <input\r\n            name=\"filter\"\r\n            className={\r\n              this.filterFound()\r\n                ? styles.inputMedium\r\n                : styles.inputMediumDisabled\r\n            }\r\n            placeholder={window.location.href.split(\"?\")[1] === \"type=exercise\" ? \"Finn muskelgrupper\" : \"Finn øvelser\"}\r\n            value={\r\n              this.state.filter.charAt(0).toUpperCase() +\r\n              this.state.filter.slice(1)\r\n            }\r\n            onChange={change =>\r\n              this.setState({ filter: change.target.value })}\r\n            onKeyPress={event =>\r\n              event.key === \"Enter\" ? this.addFilter() : \"\"\r\n            }\r\n          />\r\n          <button\r\n            className={\r\n              this.filterFound()\r\n                ? styles.buttonSmall\r\n                : styles.buttonSmallDisabled\r\n            }\r\n            onClick={() => this.addFilter()}\r\n          >\r\n            Velg\r\n          </button></div>) : ''}\r\n              <div className={styles.rowSpace}>\r\n                <div className={styles.row}>\r\n                  {postData.exercises &&\r\n                    postData.exercises.filter(a => !this.state.removeRelations.includes(a)).map(exercise => (\r\n                      <div className={styles.filterListPost}\r\n                      onClick={() => this.state.editing && this.setState({\r\n                        removeRelations: this.state.removeRelations + ' ' + exercise\r\n                      })}>{exercise}</div>\r\n                    ))}\r\n                    {this.state.postFilters.length > 0 ? this.state.postFilters.map(filter => (\r\n                      <div className={styles.filterListPost}\r\n                      onClick={() => this.state.editing && this.removeFilter(filter)}>{filter}</div>\r\n                    )) : ''}\r\n                  {postData.musclegroups.filter(a => !this.state.removeRelations.includes(a)).map(workout => (\r\n                    <div className={styles.filterListPurple}\r\n                    onClick={() => window.location.href.split(\"?\")[1] === \"type=exercise\" && \r\n                    this.state.editing && this.setState({\r\n                      removeRelations: this.state.removeRelations + ' ' + workout\r\n                    })}>{workout}</div>\r\n                  ))}\r\n                </div>\r\n                {this.props.user.username === postData.user ||\r\n                this.props.user.username === \"admin\" ? (\r\n                  this.state.editing ? (\r\n                    <div>\r\n                      <button\r\n                        className={styles.edit}\r\n                        onClick={() => this.updatePost()}\r\n                      >\r\n                        Lagre\r\n                      </button>\r\n                      /\r\n                      <button\r\n                        className={styles.edit}\r\n                        onClick={() => this.deletePost()}\r\n                      >\r\n                        Slett\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <button\r\n                      className={styles.edit}\r\n                      onClick={() =>\r\n                        this.setState({ editing: !this.state.editing })\r\n                      }\r\n                    >\r\n                      Rediger\r\n                    </button>\r\n                    \r\n                  )\r\n                ) : (\r\n                  <button \r\n                    className={this.state.visibility ? styles.buttonVis : styles.buttonNotVis} \r\n                    onClick={() => this.setState({ visibility: !this.state.visibility })} >\r\n                      {this.state.visibility ? \"Synlig\" : \"Skjult\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostContainer;\r\n"]},"metadata":{},"sourceType":"module"}