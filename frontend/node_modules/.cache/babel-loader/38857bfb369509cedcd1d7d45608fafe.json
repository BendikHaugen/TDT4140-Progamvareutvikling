{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\NewPost\\\\NewExercise.js\";\nimport React from \"react\";\nimport styles from \"../../App.module.css\";\nconst defaultState = {\n  title: \"\",\n  musclegroups: \"\",\n  image: \"\",\n  content: \"\",\n  sets: \"\",\n  reps: \"\",\n  error: false\n};\nexport default class NewExercise extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.post = async () => {\n      if (this.checkValidPost()) {\n        var date = new Date();\n        var dateFormat = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n        const formdata = new FormData();\n        formdata.append(\"title\", this.state.title);\n        formdata.append(\"date\", dateFormat);\n        formdata.append(\"content\", this.state.content);\n        formdata.append(\"sets\", this.state.sets ? this.state.sets : 1);\n        formdata.append(\"reps\", this.state.reps ? this.state.reps : 1);\n        formdata.append(\"image\", this.state.image, this.state.image.name);\n        formdata.append(\"relations\", this.state.musclegroups);\n        formdata.append(\"username\", this.props.user.username ? this.props.user.username : '');\n        console.log(formdata);\n        var parameters = {\n          method: \"POST\",\n          body: formdata,\n          redirect: \"follow\"\n        };\n        const response = await fetch(\"http://localhost:8000/exercises/\", parameters);\n        const data = await response.json();\n        console.log(\"posting a new exercise..\");\n        this.props.reFetch();\n        this.setState(defaultState);\n        return data;\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.checkValidPost = () => {\n      return this.state.title.length > 3 && this.state.title.length < 50 && this.state.image && this.state.content.length > 15;\n    };\n\n    this.onChange = change => this.setState({\n      [change.target.name]: change.target.value\n    });\n\n    this.state = defaultState;\n  }\n\n  render() {\n    if (!this.props.isCreating) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.postWrapperPublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Legg til ny \\xF8velse\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"   \", React.createElement(\"input\", {\n      name: \"title\",\n      className: styles.input,\n      placeholder: \"Navn p\\xE5 \\xF8velse\",\n      value: this.state.title,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"reps\",\n      type: \"number\",\n      className: styles.inputSmall,\n      placeholder: \"Repetisjoner\",\n      value: this.state.reps,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"sets\",\n      type: \"number\",\n      className: styles.inputSmall,\n      placeholder: \"Antall sett\",\n      value: this.state.sets,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.postImagePublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.gradientPublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.inputImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Bilde:\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      accept: \"image/png, image/jpeg\",\n      onChange: change => {\n        this.setState({\n          image: change.target.files[0]\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: styles.inputField,\n      name: \"content\",\n      style: {\n        minHeight: 100\n      },\n      placeholder: \"Beskrivelse\",\n      value: this.state.content,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \"            \", React.createElement(\"input\", {\n      name: \"musclegroups\",\n      className: styles.input,\n      placeholder: \"Velg muskelgrupper\",\n      value: this.state.musclegroups,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" \", React.createElement(\"button\", {\n      className: this.checkValidPost() ? styles.button : styles.buttonDisabled,\n      onClick: () => this.post(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"+ Publiser\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bendi/desktop/pu/62/frontend/src/components/NewPost/NewExercise.js"],"names":["React","styles","defaultState","title","musclegroups","image","content","sets","reps","error","NewExercise","Component","constructor","props","post","checkValidPost","date","Date","dateFormat","getFullYear","getMonth","getDate","formdata","FormData","append","state","name","user","username","console","log","parameters","method","body","redirect","response","fetch","data","json","reFetch","setState","length","onChange","change","target","value","render","isCreating","postWrapperPublish","input","inputSmall","postImagePublish","gradientPublish","inputImage","files","inputField","minHeight","button","buttonDisabled"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nconst defaultState = {\r\n  title: \"\",\r\n  musclegroups: \"\",\r\n  image: \"\",\r\n  content: \"\",\r\n  sets: \"\",\r\n  reps: \"\",\r\n  error: false\r\n};\r\n\r\nexport default class NewExercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState;\r\n  }\r\n\r\n  post = async () => {\r\n    if (this.checkValidPost()) {\r\n      var date = new Date();\r\n      var dateFormat =\r\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n      const formdata = new FormData();\r\n      formdata.append(\"title\", this.state.title);\r\n      formdata.append(\"date\", dateFormat);\r\n      formdata.append(\"content\", this.state.content);\r\n      formdata.append(\"sets\", this.state.sets ? this.state.sets : 1);\r\n      formdata.append(\"reps\", this.state.reps ? this.state.reps : 1);\r\n      formdata.append(\"image\", this.state.image, this.state.image.name);\r\n      formdata.append(\"relations\", this.state.musclegroups);\r\n      formdata.append(\"username\", this.props.user.username ? this.props.user.username : '')\r\n      console.log(formdata)\r\n      var parameters = {\r\n        method: \"POST\",\r\n        body: formdata,\r\n        redirect: \"follow\"\r\n      };\r\n      const response = await fetch(\r\n        \"http://localhost:8000/exercises/\",\r\n        parameters\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"posting a new exercise..\");\r\n      this.props.reFetch();\r\n      this.setState(defaultState);\r\n      return data;\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  checkValidPost = () => {\r\n    return (\r\n      this.state.title.length > 3 &&\r\n      this.state.title.length < 50 &&\r\n      this.state.image &&\r\n      this.state.content.length > 15\r\n    );\r\n  };\r\n\r\n  onChange = change =>\r\n    this.setState({ [change.target.name]: change.target.value });\r\n\r\n  render() {\r\n    if ( !this.props.isCreating ) { return <div></div>}\r\n\r\n    return (\r\n            <div className={styles.postWrapperPublish}>\r\n        <div className={styles.title}>\r\n          <strong>Legg til ny øvelse</strong></div>\r\n     <div>   <input\r\n              name=\"title\"\r\n              className={styles.input}\r\n              placeholder=\"Navn på øvelse\"\r\n              value={this.state.title}\r\n              onChange={this.onChange}\r\n            />\r\n     <input\r\n          name=\"reps\"\r\n          type=\"number\"\r\n          className={styles.inputSmall}\r\n          placeholder=\"Repetisjoner\"\r\n          value={this.state.reps}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          name=\"sets\"\r\n          type=\"number\"\r\n          className={styles.inputSmall}\r\n          placeholder=\"Antall sett\"\r\n          value={this.state.sets}\r\n          onChange={this.onChange}\r\n        />\r\n            \r\n       </div>\r\n        <div className={styles.postImagePublish} >\r\n        <div className={styles.gradientPublish}>\r\n        <div className={styles.inputImage}>\r\n              Bilde:\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={change => {\r\n                  this.setState({\r\n                    image: change.target.files[0]\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n              className={styles.inputField}\r\n              name=\"content\"\r\n              style={{ minHeight: 100 }}\r\n              placeholder=\"Beskrivelse\"\r\n              value={this.state.content}\r\n              onChange={this.onChange}\r\n            />            <input\r\n            name=\"musclegroups\"\r\n            className={styles.input}\r\n            placeholder=\"Velg muskelgrupper\"\r\n            value={this.state.musclegroups}\r\n            onChange={this.onChange}\r\n          /> <button\r\n          className={\r\n            this.checkValidPost() ? styles.button : styles.buttonDisabled\r\n          }\r\n          onClick={() => this.post()}\r\n        >\r\n          + Publiser\r\n        </button></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}