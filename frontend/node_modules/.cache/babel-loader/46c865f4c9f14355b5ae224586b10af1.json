{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\Feed\\\\Feed.js\";\nimport React from \"react\";\nimport Post from \"../Post/Post\";\nimport Card from \"../Card/Card\";\nimport NewExercise from \"../NewPost/NewExercise\";\nimport NewWorkout from \"../NewPost/NewWorkout\";\nimport Spinner from \"../Spinner/Spinner\";\nimport styles from \"../../App.module.css\";\nimport { getLatestExercises } from \"../../actions/exercises\";\nimport { getMusclegroups } from \"../../actions/musclegroups\";\nimport { getLatestWorkouts } from \"../../actions/workouts\";\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkChoosenmuskler = post => {\n      var alleØvelser = [];\n      var alleMuskler = [];\n      var match = 0;\n      post.exercises.forEach(a => alleØvelser.push(a));\n      alleØvelser.forEach(a => this.state.øvelser[Number.parseInt(a, 10)] ? alleMuskler = [...alleMuskler, ...this.state.øvelser[Number.parseInt(a, 10)].muskler] : \"\");\n      alleMuskler.forEach(a => this.state.valgteMuskler.includes(a) ? match = match + 1 : \"\");\n      return match === this.state.valgteMuskler.length;\n    };\n\n    this.state = {\n      musclegroups: {},\n      exercises: {},\n      workouts: {},\n      valgteMuskler: [],\n      valgteØvelser: [],\n      loadingExercises: true,\n      loadingMusclegroups: true,\n      loadingWorkouts: true,\n      scroller: 0\n    };\n  }\n\n  componentDidMount() {\n    this.buildFeed();\n  }\n\n  buildFeed() {\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data\n    })).then(() => this.setState({\n      loadingMusclegroups: false\n    }));\n    getLatestExercises().then(data => this.setState({\n      exercises: data\n    })).then(() => this.setState({\n      loadingExercises: false\n    }));\n    getLatestWorkouts().then(data => this.setState({\n      workouts: data\n    })).then(() => this.setState({\n      loadingWorkouts: false\n    }));\n  }\n\n  render() {\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.feedContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.actionBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(NewExercise, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      createNew: () => this.props.newExercise(),\n      isCreating: this.props.creatingNewExercise,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(NewWorkout, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      createNew: () => this.props.newWorkout(),\n      isCreating: this.props.creatingNewWorkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), this.state.valgteMuskler.length === 0 ? this.state.workouts.slice(0, 3).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))) : this.state.workouts.map(post => this.checkChoosenmuskler(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \" \") : \"\")), React.createElement(\"div\", {\n      className: styles.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Sorter p\\xE5 muskelgrupper\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.state.musclegroups.map(tag => React.createElement(\"div\", {\n      onClick: () => this.state.valgteMuskler.includes(tag) ? this.setState({\n        valgteMuskler: this.state.valgteMuskler.filter(a => a !== tag)\n      }) : this.setState(prev => ({\n        valgteMuskler: [...prev.valgteMuskler, tag]\n      })),\n      className: this.state.valgteMuskler.includes(tag) ? styles.choosenLink : styles.filterLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, tag.name)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Sorter p\\xE5 \\xF8velser\")), !this.state.loading ? this.state.exercises.map(øvelse => React.createElement(\"div\", {\n      onClick: () => this.state.valgteØvelser.includes(øvelse.title) ? this.setState({\n        valgteØvelser: this.state.valgteØvelser.filter(a => a !== øvelse.title)\n      }) : this.setState(prev => ({\n        valgteØvelser: [...prev.valgteØvelser, øvelse.title]\n      })),\n      className: this.state.valgteØvelser.includes(øvelse.title) ? styles.choosenLink : styles.filterLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, øvelse.title)) : '')), React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.valgteMuskler.length === 0 && !this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller !== 0 ? this.setState({\n        scroller: this.state.scroller - 4\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"<\"), this.state.exercises.slice(this.state.scroller, this.state.scroller + 4).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Card, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: this.state.scroller + 4 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller + 4 < this.state.exercises.length ? this.setState({\n        scroller: this.state.scroller + 4\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \">\")), React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), this.state.workouts.slice(3).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), \" \") : \"\")));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/components/Feed/Feed.js"],"names":["React","Post","Card","NewExercise","NewWorkout","Spinner","styles","getLatestExercises","getMusclegroups","getLatestWorkouts","Feed","Component","constructor","props","checkChoosenmuskler","post","alleØvelser","alleMuskler","match","exercises","forEach","a","push","state","øvelser","Number","parseInt","muskler","valgteMuskler","includes","length","musclegroups","workouts","valgteØvelser","loadingExercises","loadingMusclegroups","loadingWorkouts","scroller","componentDidMount","buildFeed","then","data","setState","render","feedContainer","feed","actionBar","user","newExercise","creatingNewExercise","newWorkout","creatingNewWorkout","slice","map","singlePost","date","title","image","content","filter","tag","prev","choosenLink","filterLink","name","loading","øvelse","cardContainer","arrow","arrowDisabled","url","sets","reps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport Card from \"../Card/Card\";\r\nimport NewExercise from \"../NewPost/NewExercise\"\r\nimport NewWorkout from \"../NewPost/NewWorkout\"\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nimport { getLatestExercises } from \"../../actions/exercises\";\r\nimport { getMusclegroups } from \"../../actions/musclegroups\";\r\nimport { getLatestWorkouts } from \"../../actions/workouts\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      musclegroups: {},\r\n      exercises: {},\r\n      workouts: {},\r\n      valgteMuskler: [],\r\n      valgteØvelser: [],\r\n      loadingExercises: true,\r\n      loadingMusclegroups: true,\r\n      loadingWorkouts: true,\r\n      scroller: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildFeed();\r\n  }\r\n  \r\n  buildFeed() {\r\n    getMusclegroups()\r\n    .then(data => this.setState({musclegroups : data}))\r\n    .then(() => this.setState({loadingMusclegroups : false}));\r\n    getLatestExercises()\r\n    .then(data => this.setState({exercises : data}))\r\n    .then(() => this.setState({loadingExercises : false}));\r\n    getLatestWorkouts()\r\n    .then(data => this.setState({workouts : data}))\r\n    .then(() => this.setState({loadingWorkouts : false}));\r\n  }\r\n\r\n  checkChoosenmuskler = post => {\r\n    var alleØvelser = [];\r\n    var alleMuskler = [];\r\n    var match = 0;\r\n    post.exercises.forEach(a => alleØvelser.push(a));\r\n    alleØvelser.forEach(a =>\r\n      this.state.øvelser[Number.parseInt(a, 10)]\r\n        ? (alleMuskler = [\r\n            ...alleMuskler,\r\n            ...this.state.øvelser[Number.parseInt(a, 10)].muskler\r\n          ])\r\n        : \"\"\r\n    );\r\n    alleMuskler.forEach(a =>\r\n      this.state.valgteMuskler.includes(a) ? (match = match + 1) : \"\"\r\n    );\r\n    return match === this.state.valgteMuskler.length;\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\r\n      return (      <div>\r\n        <div className={styles.feedContainer}><Spinner /></div></div>)\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.feed}>\r\n        <div className={styles.actionBar}>\r\n          <NewExercise reFetch={() => this.buildFeed()} user={this.props.user} createNew={() => this.props.newExercise()} isCreating={this.props.creatingNewExercise}/>\r\n          <NewWorkout reFetch={() => this.buildFeed()} user={this.props.user} createNew={() => this.props.newWorkout()} isCreating={this.props.creatingNewWorkout}/>\r\n          </div>\r\n            {this.state.valgteMuskler.length === 0\r\n              ? this.state.workouts.slice(0, 3).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))\r\n              : this.state.workouts.map(post =>\r\n                  this.checkChoosenmuskler(post) ? (\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Post\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )}\r\n          </div>\r\n          <div className={styles.filter}>\r\n            <h3>\r\n              <strong>Sorter på muskelgrupper</strong>\r\n            </h3>\r\n            <br />\r\n            {this.state.musclegroups.map(tag => (\r\n              <div\r\n                onClick={() =>\r\n                  this.state.valgteMuskler.includes(tag)\r\n                    ? this.setState({\r\n                        valgteMuskler: this.state.valgteMuskler.filter(\r\n                          a => a !== tag\r\n                        )\r\n                      })\r\n                    : this.setState(prev => ({\r\n                        valgteMuskler: [...prev.valgteMuskler, tag]\r\n                      }))\r\n                }\r\n                className={\r\n                  this.state.valgteMuskler.includes(tag)\r\n                    ? styles.choosenLink\r\n                    : styles.filterLink\r\n                }\r\n              >\r\n                {tag.name}\r\n              </div>\r\n            ))}\r\n            \r\n            <h3>\r\n              <strong>Sorter på øvelser</strong>\r\n            </h3>\r\n            {!this.state.loading ? (this.state.exercises.map(øvelse => (\r\n              <div\r\n                onClick={() =>\r\n                  this.state.valgteØvelser.includes(øvelse.title)\r\n                    ? this.setState({\r\n                        valgteØvelser: this.state.valgteØvelser.filter(\r\n                          a => a !== øvelse.title\r\n                        )\r\n                      })\r\n                    : this.setState(prev => ({\r\n                        valgteØvelser: [...prev.valgteØvelser, øvelse.title]\r\n                      }))\r\n                }\r\n                className={\r\n                  this.state.valgteØvelser.includes(øvelse.title)\r\n                    ? styles.choosenLink\r\n                    : styles.filterLink\r\n                }\r\n              >\r\n                {øvelse.title}\r\n              </div>\r\n            ))) : ''}\r\n          </div>\r\n        </div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.feed}>\r\n            {this.state.valgteMuskler.length === 0 && !this.state.loading ? (\r\n              <div>\r\n                <div className={styles.cardContainer}>\r\n                  <div className={this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller !== 0 ? this.setState({scroller: this.state.scroller - 4}) : ''}>{\"<\"}</div>\r\n                  {this.state.exercises.slice(this.state.scroller, this.state.scroller+4).map(post => (\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Card\r\n                        url={post.url}\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                        sets={post.sets}\r\n                        reps={post.reps}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                  <div className={ this.state.scroller+4 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller+4 < this.state.exercises.length ? this.setState({scroller: this.state.scroller + 4}) : ''}>{\">\"}</div>\r\n                </div>\r\n                <div className={styles.cardContainer}>\r\n                </div>\r\n                {this.state.workouts.slice(3).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}