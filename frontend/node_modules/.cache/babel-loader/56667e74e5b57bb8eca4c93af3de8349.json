{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\NewPost\\\\NewExercise.js\";\nimport React from \"react\";\nimport styles from \"../../App.module.css\";\nconst defaultState = {\n  title: \"\",\n  addMusclegroup: \"\",\n  musclegroups: [],\n  musclegroupsId: \"\",\n  image: \"\",\n  content: \"\",\n  sets: \"\",\n  reps: \"\",\n  error: false\n};\nexport default class NewExercise extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.post = async () => {\n      if (this.checkValidPost()) {\n        var date = new Date();\n        var dateFormat = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n        const formdata = new FormData();\n        formdata.append(\"title\", this.state.title);\n        formdata.append(\"date\", dateFormat);\n        formdata.append(\"content\", this.state.content);\n        formdata.append(\"sets\", this.state.sets ? this.state.sets : 1);\n        formdata.append(\"reps\", this.state.reps ? this.state.reps : 1);\n        formdata.append(\"image\", this.state.image, this.state.image.name);\n        formdata.append(\"relations\", this.state.musclegroupsId);\n        formdata.append(\"username\", this.props.user.username ? this.props.user.username : '');\n        var parameters = {\n          method: \"POST\",\n          body: formdata,\n          redirect: \"follow\"\n        };\n        const response = await fetch(\"http://localhost:8000/exercises/\", parameters);\n        const data = await response.json();\n        console.log(\"posting a new exercise..\");\n        this.props.reFetch();\n        this.setState(defaultState);\n        return data;\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.checkValidPost = () => {\n      return this.state.title.length > 3 && this.state.title.length < 50 && this.state.image && this.state.content.length > 15;\n    };\n\n    this.onChange = change => this.setState({\n      [change.target.name]: change.target.value\n    });\n\n    this.filterFound = () => {\n      var match = '';\n\n      if (this.state.musclegroups.indexOf(this.state.addMusclegroup) <= -1) {\n        this.props.musclegroups.forEach(a => this.state.addMusclegroup === a.name ? match = a.id : '');\n        return match;\n      }\n    };\n\n    this.state = defaultState;\n  }\n\n  removeFilter(filter) {\n    var oldIds = this.state.musclegroupsId.split(' ').slice(1);\n    var newFilters = [];\n    var newIds = '';\n    oldIds.splice(this.state.musclegroups.indexOf(filter), 1);\n    oldIds.forEach(id => newIds = newIds + \" \" + id);\n    this.state.musclegroups.forEach(a => a !== filter ? newFilters.push(a) : '');\n    this.setState({\n      musclegroups: newFilters,\n      musclegroupsId: newIds\n    });\n  }\n\n  addFilter() {\n    if (this.filterFound()) {\n      this.setState({\n        musclegroupsId: this.state.musclegroupsId + \" \" + this.filterFound(),\n        musclegroups: [...this.state.musclegroups, this.state.addMusclegroup],\n        addMusclegroup: ''\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.isCreating) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.postWrapperPublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Legg til ny \\xF8velse\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"   \", React.createElement(\"input\", {\n      name: \"title\",\n      className: styles.input,\n      placeholder: \"Navn p\\xE5 \\xF8velse\",\n      value: this.state.title,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"reps\",\n      type: \"number\",\n      className: styles.inputSmall,\n      placeholder: \"Repetisjoner\",\n      value: this.state.reps,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"sets\",\n      type: \"number\",\n      className: styles.inputSmall,\n      placeholder: \"Antall sett\",\n      value: this.state.sets,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.postImagePublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.gradientPublish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.inputImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Bilde:\", React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      accept: \"image/png, image/jpeg\",\n      onChange: change => {\n        this.setState({\n          image: change.target.files[0]\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: styles.inputField,\n      name: \"content\",\n      style: {\n        minHeight: 100\n      },\n      placeholder: \"Beskrivelse\",\n      value: this.state.content,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"addMusclegroup\",\n      className: this.filterFound() ? styles.input : styles.inputDisabled,\n      placeholder: \"Velg muskelgrupper\",\n      value: this.state.addMusclegroup.charAt(0).toUpperCase() + this.state.addMusclegroup.slice(1),\n      onChange: this.onChange,\n      onKeyPress: event => event.key === \"Enter\" ? this.addFilter() : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: this.filterFound() ? styles.button : styles.buttonDisabled,\n      onClick: () => this.addFilter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"+ Legg til\"), React.createElement(\"button\", {\n      className: this.checkValidPost() ? styles.button : styles.buttonDisabled,\n      onClick: () => this.post(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Publiser\")), React.createElement(\"div\", {\n      className: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.state.musclegroups.map(musclegroup => React.createElement(\"div\", {\n      className: styles.filterListPost,\n      onClick: () => this.removeFilter(musclegroup),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, musclegroup))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/components/NewPost/NewExercise.js"],"names":["React","styles","defaultState","title","addMusclegroup","musclegroups","musclegroupsId","image","content","sets","reps","error","NewExercise","Component","constructor","props","post","checkValidPost","date","Date","dateFormat","getFullYear","getMonth","getDate","formdata","FormData","append","state","name","user","username","parameters","method","body","redirect","response","fetch","data","json","console","log","reFetch","setState","length","onChange","change","target","value","filterFound","match","indexOf","forEach","a","id","removeFilter","filter","oldIds","split","slice","newFilters","newIds","splice","push","addFilter","render","isCreating","postWrapperPublish","input","inputSmall","postImagePublish","gradientPublish","inputImage","files","inputField","minHeight","inputDisabled","charAt","toUpperCase","event","key","button","buttonDisabled","row","map","musclegroup","filterListPost"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nconst defaultState = {\r\n  title: \"\",\r\n  addMusclegroup: \"\",\r\n  musclegroups: [],\r\n  musclegroupsId: \"\",\r\n  image: \"\",\r\n  content: \"\",\r\n  sets: \"\",\r\n  reps: \"\",\r\n  error: false\r\n};\r\n\r\nexport default class NewExercise extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = defaultState;\r\n  }\r\n\r\n  post = async () => {\r\n    if (this.checkValidPost()) {\r\n      var date = new Date();\r\n      var dateFormat =\r\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n      const formdata = new FormData();\r\n      formdata.append(\"title\", this.state.title);\r\n      formdata.append(\"date\", dateFormat);\r\n      formdata.append(\"content\", this.state.content);\r\n      formdata.append(\"sets\", this.state.sets ? this.state.sets : 1);\r\n      formdata.append(\"reps\", this.state.reps ? this.state.reps : 1);\r\n      formdata.append(\"image\", this.state.image, this.state.image.name);\r\n      formdata.append(\"relations\", this.state.musclegroupsId);\r\n      formdata.append(\"username\", this.props.user.username ? this.props.user.username : '')\r\n\r\n      var parameters = {\r\n        method: \"POST\",\r\n        body: formdata,\r\n        redirect: \"follow\"\r\n      };\r\n      const response = await fetch(\r\n        \"http://localhost:8000/exercises/\",\r\n        parameters\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"posting a new exercise..\");\r\n      this.props.reFetch();\r\n      this.setState(defaultState);\r\n      return data;\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  checkValidPost = () => {\r\n    return (\r\n      this.state.title.length > 3 &&\r\n      this.state.title.length < 50 &&\r\n      this.state.image &&\r\n      this.state.content.length > 15\r\n    );\r\n  };\r\n\r\n  onChange = change =>\r\n    this.setState({ [change.target.name]: change.target.value });\r\n\r\n  filterFound = () => {\r\n    var match = '';\r\n    if (this.state.musclegroups.indexOf(this.state.addMusclegroup) <= -1) {\r\n    this.props.musclegroups.forEach(a => this.state.addMusclegroup === a.name ? match = a.id : '')\r\n    return match;\r\n    }\r\n  }\r\n\r\n  removeFilter(filter) {\r\n    var oldIds = this.state.musclegroupsId.split(' ').slice(1);\r\n    var newFilters = [];\r\n    var newIds = '';\r\n    oldIds.splice(this.state.musclegroups.indexOf(filter), 1)\r\n    oldIds.forEach(id => \r\n      newIds = newIds + \" \" + id);\r\n\r\n    this.state.musclegroups.forEach(a => a !== filter ?\r\n    newFilters.push(a) : '');\r\n    this.setState({musclegroups: newFilters, musclegroupsId: newIds})\r\n  }\r\n\r\n  addFilter() {\r\n    if (this.filterFound()) {\r\n    this.setState({musclegroupsId: (this.state.musclegroupsId + \" \" + this.filterFound()),\r\n    musclegroups: [...this.state.musclegroups, this.state.addMusclegroup], addMusclegroup: ''})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if ( !this.props.isCreating ) { return <div></div>}\r\n    return (\r\n            <div className={styles.postWrapperPublish}>\r\n        <div className={styles.title}>\r\n          <strong>Legg til ny øvelse</strong></div>\r\n     <div>   <input\r\n              name=\"title\"\r\n              className={styles.input}\r\n              placeholder=\"Navn på øvelse\"\r\n              value={this.state.title}\r\n              onChange={this.onChange}\r\n            />\r\n     <input\r\n          name=\"reps\"\r\n          type=\"number\"\r\n          className={styles.inputSmall}\r\n          placeholder=\"Repetisjoner\"\r\n          value={this.state.reps}\r\n          onChange={this.onChange}\r\n        />\r\n        <input\r\n          name=\"sets\"\r\n          type=\"number\"\r\n          className={styles.inputSmall}\r\n          placeholder=\"Antall sett\"\r\n          value={this.state.sets}\r\n          onChange={this.onChange}\r\n        />\r\n            \r\n       </div>\r\n        <div className={styles.postImagePublish} >\r\n        <div className={styles.gradientPublish}>\r\n        <div className={styles.inputImage}>\r\n              Bilde:\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                accept=\"image/png, image/jpeg\"\r\n                onChange={change => {\r\n                  this.setState({\r\n                    image: change.target.files[0]\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div>\r\n          <textarea\r\n              className={styles.inputField}\r\n              name=\"content\"\r\n              style={{ minHeight: 100 }}\r\n              placeholder=\"Beskrivelse\"\r\n              value={this.state.content}\r\n              onChange={this.onChange}\r\n            /> \r\n            <input\r\n            name=\"addMusclegroup\"\r\n            className={this.filterFound() ? styles.input : styles.inputDisabled}\r\n            placeholder=\"Velg muskelgrupper\"\r\n            value={this.state.addMusclegroup.charAt(0).toUpperCase() + \r\n              this.state.addMusclegroup.slice(1)}\r\n            onChange={this.onChange}\r\n            onKeyPress={event =>\r\n              event.key === \"Enter\" ? this.addFilter() : \"\"} />\r\n               <button\r\n          className={\r\n            this.filterFound() ? styles.button : styles.buttonDisabled\r\n          }\r\n          onClick={() => this.addFilter()}\r\n        >\r\n          + Legg til\r\n        </button>\r\n          <button\r\n          className={\r\n            this.checkValidPost() ? styles.button : styles.buttonDisabled\r\n          }\r\n          onClick={() => this.post()}\r\n        >\r\n          Publiser\r\n        </button></div>\r\n        <div className={styles.row}>\r\n        {this.state.musclegroups.map(musclegroup =>\r\n        <div className={styles.filterListPost} onClick={() => this.removeFilter(musclegroup)}>{musclegroup}</div>)}\r\n      </div></div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}