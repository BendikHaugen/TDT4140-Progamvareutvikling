{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Home from \"./Home\";\nimport Login from \"./components/Login/Login\";\nimport Info from \"./components/Info/Info\";\nimport PostContainer from \"./components/Post/PostContainer\";\nimport { getUser } from \"./actions/user\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nconst defaultState = {\n  user: {},\n  token: \"\",\n  login: false,\n  info: false,\n  feed: true,\n  post: {},\n  postUrl: \"\",\n  type: \"\"\n};\nlet authenticatedUser = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.authenticateUser = token => {\n      if (token) {\n        localStorage.setItem(\"token\", token);\n        getUser(token).then(user => authenticatedUser = user).then(() => this.setState({\n          login: false,\n          token: token,\n          user: authenticatedUser\n        }));\n      }\n    };\n\n    this.getSinglePostUrl = () => {\n      this.setState({\n        postUrl: window.location.href.split(\"?\")[0].split(\"posts/\")[1] ? window.location.href.split(\"?\")[0].split(\"posts/\")[1].toString() : \"\",\n        type: window.location.href.split(\"?type=\")[1] ? window.location.href.split(\"?type=\")[1] : \"\"\n      });\n      this.setState({\n        feed: false\n      });\n    };\n\n    this.goToLogin = () => {\n      localStorage.removeItem(\"token\");\n      this.setState(defaultState);\n      this.setState({\n        login: true\n      });\n    };\n\n    this.goToInfo = () => {\n      this.setState({\n        defaultState\n      });\n      this.setState({\n        info: !this.state.info\n      });\n    };\n\n    this.leaveLogin = () => {\n      localStorage.removeItem(\"token\");\n      this.setState(defaultState);\n    };\n\n    this.state = defaultState;\n  }\n\n  componentDidMount() {\n    this.authenticateUser(localStorage.getItem(\"token\"));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Roboto&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Work+Sans&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Login, {\n      onAuth: user => this.authenticateUser(user.token),\n      onCancel: () => this.leaveLogin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Home, {\n      user: this.state.user,\n      token: this.state.token,\n      onLogin: () => this.goToLogin(),\n      onInfo: () => this.goToInfo(),\n      singlePost: (post, type) => this.setState({\n        feed: false,\n        post: post,\n        type: type\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Info, {\n      user: this.state.user,\n      onLogin: () => this.goToLogin(),\n      onInfo: () => this.goToInfo(),\n      homeButton: () => this.setState({\n        info: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(PostContainer, {\n      user: this.state.user,\n      token: this.state.token,\n      onLogin: () => this.goToLogin(),\n      onInfo: () => this.goToInfo(),\n      setRoute: () => this.getSinglePostUrl(),\n      homeButton: () => this.setState({\n        feed: true\n      }),\n      onDelete: () => this.setState({\n        feed: true\n      }) && this.forceUpdate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })))), this.state.login ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : this.state.info ? React.createElement(Redirect, {\n      to: \"/info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }) : this.state.feed ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/posts/\" + (this.state.post.id ? this.state.post.id : this.state.postUrl) + `?type=${this.state.type}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), \";\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/App.js"],"names":["React","Home","Login","Info","PostContainer","getUser","BrowserRouter","Router","Switch","Route","Redirect","defaultState","user","token","login","info","feed","post","postUrl","type","authenticatedUser","App","Component","constructor","props","authenticateUser","localStorage","setItem","then","setState","getSinglePostUrl","window","location","href","split","toString","goToLogin","removeItem","goToInfo","state","leaveLogin","componentDidMount","getItem","render","forceUpdate","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Info from \"./components/Info/Info\";\r\nimport PostContainer from \"./components/Post/PostContainer\";\r\n\r\nimport { getUser } from \"./actions/user\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst defaultState = {\r\n  user: {},\r\n  token: \"\",\r\n  login: false,\r\n  info: false,\r\n  feed: true,\r\n  post: {},\r\n  postUrl: \"\",\r\n  type: \"\"\r\n};\r\n\r\nlet authenticatedUser = {};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = defaultState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.authenticateUser(localStorage.getItem(\"token\"));\r\n  }\r\n\r\n  authenticateUser = token => {\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token);\r\n      getUser(token)\r\n        .then(user => (authenticatedUser = user))\r\n        .then(() =>\r\n          this.setState({ login: false, token: token, user: authenticatedUser })\r\n        );\r\n    }\r\n  };\r\n\r\n  getSinglePostUrl = () => {\r\n    this.setState({\r\n      postUrl: window.location.href.split(\"?\")[0].split(\"posts/\")[1]\r\n        ? window.location.href\r\n            .split(\"?\")[0]\r\n            .split(\"posts/\")[1]\r\n            .toString()\r\n        : \"\",\r\n      type: window.location.href.split(\"?type=\")[1]\r\n        ? window.location.href.split(\"?type=\")[1]\r\n        : \"\"\r\n    });\r\n    this.setState({ feed: false });\r\n  };\r\n\r\n  goToLogin = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.setState(defaultState);\r\n    this.setState({ login: true });\r\n  };\r\n\r\n  goToInfo = () => {\r\n    this.setState({ defaultState });\r\n    this.setState({ info: !this.state.info });\r\n  };\r\n\r\n  leaveLogin = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.setState(defaultState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css?family=Roboto&display=swap\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css?family=Work+Sans&display=swap\"\r\n          rel=\"stylesheet\"\r\n        ></link>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              <Login\r\n                onAuth={user => this.authenticateUser(user.token)}\r\n                onCancel={() => this.leaveLogin()}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home\r\n                user={this.state.user}\r\n                token={this.state.token}\r\n                onLogin={() => this.goToLogin()}\r\n                onInfo={() => this.goToInfo()}\r\n                singlePost={(post, type) =>\r\n                  this.setState({ feed: false, post: post, type: type })\r\n                }\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/info\">\r\n              <Info\r\n                user={this.state.user}\r\n                onLogin={() => this.goToLogin()}\r\n                onInfo={() => this.goToInfo()}\r\n                homeButton={() => this.setState({ info: false })}\r\n              />\r\n            </Route>\r\n            <Route path=\"/posts\">\r\n              <PostContainer\r\n                user={this.state.user}\r\n                token={this.state.token}\r\n                onLogin={() => this.goToLogin()}\r\n                onInfo={() => this.goToInfo()}\r\n                setRoute={() => this.getSinglePostUrl()}\r\n                homeButton={() => this.setState({ feed: true })}\r\n                onDelete={() =>\r\n                  this.setState({ feed: true }) && this.forceUpdate()\r\n                }\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        {this.state.login ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : this.state.info ? (\r\n          <Redirect to=\"/info\" />\r\n        ) : this.state.feed ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Redirect\r\n            to={\r\n              \"/posts/\" +\r\n              (this.state.post.id ? this.state.post.id : this.state.postUrl) +\r\n              `?type=${this.state.type}`\r\n            }\r\n          />\r\n        )}\r\n        ;\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}