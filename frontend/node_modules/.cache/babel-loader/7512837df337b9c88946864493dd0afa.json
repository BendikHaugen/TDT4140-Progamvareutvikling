{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\Feed\\\\Feed.js\";\nimport React from \"react\";\nimport Post from \"../Post/Post\";\nimport Card from \"../Card/Card\";\nimport NewExercise from \"../NewPost/NewExercise\";\nimport NewWorkout from \"../NewPost/NewWorkout\";\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\nimport styles from \"../../App.module.css\";\nimport { getLatestExercises } from \"../../actions/exercises\";\nimport { getMusclegroups } from \"../../actions/musclegroups\";\nimport { getLatestWorkouts } from \"../../actions/workouts\";\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterFound = () => {\n      var match = '';\n\n      if (!this.state.selectedFilters.includes(this.state.filter)) {\n        this.state.musclegroups.forEach(a => this.state.filter === a.name ? match = a.name : '') || this.state.exercises.forEach(a => this.state.filter === a.title ? match = a.title : '');\n        return match;\n      }\n    };\n\n    this.checkSelectedFilters = post => {\n      var postExercises = [];\n      var postMusclegroups = [];\n      var match = 0;\n\n      if (post.exercises) {\n        post.exercises.forEach(a => postExercises.push(a));\n        postExercises.forEach(exercise => exercise.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup)));\n      } else if (post.musclegroups) {\n        postExercises.push(post);\n        post.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup));\n      }\n\n      postExercises.forEach(a => this.state.selectedFilters.includes(a.title) ? match = match + 1 : \"\");\n      postMusclegroups.forEach(a => this.state.selectedFilters.includes(a.name) ? match = match + 1 : \"\");\n      return match >= this.state.selectedFilters.length;\n    };\n\n    this.state = {\n      musclegroups: {},\n      exercises: {},\n      workouts: {},\n      selectedFilters: [],\n      filter: '',\n      loadingExercises: true,\n      loadingMusclegroups: true,\n      loadingWorkouts: true,\n      scroller: 0\n    };\n  }\n\n  componentDidMount() {\n    this.buildFeed();\n  }\n\n  buildFeed() {\n    this.props.defaultHome();\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data\n    })).then(() => this.setState({\n      loadingMusclegroups: false\n    }));\n    getLatestExercises().then(data => this.setState({\n      exercises: data\n    })).then(() => this.setState({\n      loadingExercises: false\n    }));\n    getLatestWorkouts().then(data => this.setState({\n      workouts: data\n    })).then(() => this.setState({\n      loadingWorkouts: false\n    }));\n  }\n\n  addFilter() {\n    if (this.filterFound()) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, this.state.filter],\n        filter: ''\n      });\n    }\n  }\n\n  removeFilter(filter) {\n    var allFilters = this.state.selectedFilters;\n    this.setState({\n      selectedFilters: []\n    });\n\n    if (this.filterFound()) {\n      allFilters.forEach(a => a !== filter ? this.setState({\n        selectedFilters: [...this.state.selectedFilters, a]\n      }) : '');\n    }\n  }\n\n  render() {\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.feedContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(SpinnerPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mainHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.props.user.username ? 'Hei, ' + this.props.user.username + '!' : 'Velkommen!')), React.createElement(NewExercise, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewExercise,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(NewWorkout, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewWorkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, !this.props.hiddenWorkouts ? this.state.selectedFilters.length === 0 ? this.state.workouts.slice(0, 2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))) : this.state.workouts.map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), \" \") : \"\") : '')), React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, !this.props.hiddenExercises ? React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller !== 0 ? this.setState({\n        scroller: this.state.scroller - 3\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"<\"), this.state.exercises.slice(this.state.scroller, this.state.scroller + 3).map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Card, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })) : ''), React.createElement(\"div\", {\n      className: this.state.scroller + 3 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller + 4 < this.state.exercises.length ? this.setState({\n        scroller: this.state.scroller + 3\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \">\")) : '', React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts && this.state.workouts.slice(2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }))), \" \") : \"\")), React.createElement(\"div\", {\n      className: styles.filterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filtrer p\\xE5 muskelgrupper og \\xF8velser\",\n      name: \"Filter\",\n      autocomplete: \"off\",\n      value: this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1),\n      onChange: change => this.setState({\n        filter: change.target.value\n      }),\n      className: this.filterFound() ? styles.filterEnabled : styles.filterDisabled,\n      onKeyPress: event => event.key === \"Enter\" ? this.addFilter() : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.filterFound(),\n      onClick: () => this.addFilter(),\n      className: this.filterFound() ? styles.buttonFilter : styles.buttonFilterDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Legg til\"), this.state.selectedFilters.map(filter => React.createElement(\"div\", {\n      className: styles.filterList,\n      onClick: () => this.removeFilter(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, filter))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/bendi/desktop/pu/62/frontend/src/components/Feed/Feed.js"],"names":["React","Post","Card","NewExercise","NewWorkout","SpinnerPost","styles","getLatestExercises","getMusclegroups","getLatestWorkouts","Feed","Component","constructor","props","filterFound","match","state","selectedFilters","includes","filter","musclegroups","forEach","a","name","exercises","title","checkSelectedFilters","post","postExercises","postMusclegroups","push","exercise","musclegroup","length","workouts","loadingExercises","loadingMusclegroups","loadingWorkouts","scroller","componentDidMount","buildFeed","defaultHome","then","data","setState","addFilter","removeFilter","allFilters","render","feedContainer","mainHeader","user","username","creatingNewExercise","creatingNewWorkout","feed","hiddenWorkouts","slice","map","singlePost","date","image","content","loading","hiddenExercises","cardContainer","arrow","arrowDisabled","url","sets","reps","filterContainer","charAt","toUpperCase","change","target","value","filterEnabled","filterDisabled","event","key","buttonFilter","buttonFilterDisabled","filterList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport Card from \"../Card/Card\";\r\nimport NewExercise from \"../NewPost/NewExercise\"\r\nimport NewWorkout from \"../NewPost/NewWorkout\"\r\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nimport { getLatestExercises } from \"../../actions/exercises\";\r\nimport { getMusclegroups } from \"../../actions/musclegroups\";\r\nimport { getLatestWorkouts } from \"../../actions/workouts\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      musclegroups: {},\r\n      exercises: {},\r\n      workouts: {},\r\n      selectedFilters: [],\r\n      filter: '',\r\n      loadingExercises: true,\r\n      loadingMusclegroups: true,\r\n      loadingWorkouts: true,\r\n      scroller: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildFeed();\r\n  }\r\n\r\n  buildFeed() {\r\n    this.props.defaultHome();\r\n    getMusclegroups()\r\n      .then(data => this.setState({ musclegroups: data }))\r\n      .then(() => this.setState({ loadingMusclegroups: false }));\r\n    getLatestExercises()\r\n      .then(data => this.setState({ exercises: data }))\r\n      .then(() => this.setState({ loadingExercises: false }));\r\n    getLatestWorkouts()\r\n      .then(data => this.setState({ workouts: data }))\r\n      .then(() => this.setState({ loadingWorkouts: false }));\r\n  }\r\n\r\n  filterFound = () => {\r\n    var match = '';\r\n    if (!this.state.selectedFilters.includes(this.state.filter)) {\r\n    this.state.musclegroups.forEach(a => this.state.filter === a.name ? match = a.name : '') || this.state.exercises.forEach(a => this.state.filter === a.title ? match = a.title : '')\r\n    return match;\r\n    }\r\n  }\r\n\r\n  addFilter() {\r\n    if (this.filterFound()) {\r\n    this.setState({selectedFilters: [...this.state.selectedFilters, this.state.filter], filter: ''})\r\n    }\r\n  }\r\n\r\n  removeFilter(filter) {\r\n    var allFilters = this.state.selectedFilters;\r\n    this.setState({selectedFilters: []})\r\n    if (this.filterFound()) {\r\n    allFilters.forEach(a => a !== filter ?\r\n    this.setState({selectedFilters: [...this.state.selectedFilters, a] }) : '')\r\n    }\r\n  }\r\n\r\n  checkSelectedFilters = post => {\r\n    var postExercises = [];\r\n    var postMusclegroups = [];\r\n    var match = 0;\r\n    if (post.exercises) {\r\n      post.exercises.forEach(a => postExercises.push(a));\r\n      postExercises.forEach(exercise =>\r\n        exercise.musclegroups.forEach(musclegroup =>\r\n        postMusclegroups.push(musclegroup)\r\n      ));\r\n    }\r\n    else if (post.musclegroups) {\r\n      postExercises.push(post);\r\n      post.musclegroups.forEach(musclegroup =>\r\n        postMusclegroups.push(musclegroup)\r\n      );\r\n    }\r\n    postExercises.forEach(a =>\r\n      this.state.selectedFilters.includes(a.title) ? (match = match + 1) : \"\"\r\n    );\r\n    postMusclegroups.forEach(a =>\r\n      this.state.selectedFilters.includes(a.name) ? (match = match + 1) : \"\"\r\n    );\r\n    return match >= this.state.selectedFilters.length;\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\r\n      return (      <div>\r\n        <div className={styles.feedContainer}><SpinnerPost /></div></div>)\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.mainHeader}><h1>{this.props.user.username ? 'Hei, '+this.props.user.username+'!' : 'Velkommen!'}</h1></div>\r\n          <NewExercise reFetch={() => this.buildFeed()} user={this.props.user} isCreating={this.props.creatingNewExercise}/>\r\n      <NewWorkout reFetch={() => this.buildFeed()} user={this.props.user} isCreating={this.props.creatingNewWorkout}/>         \r\n          <div className={styles.feed}>\r\n          {!this.props.hiddenWorkouts ?\r\n          (this.state.selectedFilters.length === 0\r\n              ? this.state.workouts.slice(0, 2).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))\r\n              : this.state.workouts.map(post =>\r\n                  this.checkSelectedFilters(post) ? (\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Post\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )) : ''}\r\n          </div>\r\n        </div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.feed}>\r\n            {!this.state.loading ? (\r\n              <div>\r\n               {!this.props.hiddenExercises ? (<div className={styles.cardContainer}>\r\n                  <div className={this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller !== 0 ? this.setState({scroller: this.state.scroller - 3}) : ''}>{\"<\"}</div>\r\n                  {this.state.exercises.slice(this.state.scroller, this.state.scroller+3).map(post => (\r\n                    this.checkSelectedFilters(post) ?\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Card\r\n                        url={post.url}\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                        sets={post.sets}\r\n                        reps={post.reps}\r\n                      />\r\n                    </div> : ''\r\n                  ))}\r\n                  <div className={ this.state.scroller+3 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller+4 < this.state.exercises.length ? this.setState({scroller: this.state.scroller + 3}) : ''}>{\">\"}</div>\r\n                </div>) : ''}\r\n                <div className={styles.cardContainer}>\r\n                </div>\r\n               { this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts && this.state.workouts.slice(2).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={styles.filterContainer}>\r\n      <input \r\n      placeholder=\"Filtrer på muskelgrupper og øvelser\"\r\n      name=\"Filter\"\r\n      autocomplete=\"off\"\r\n      value={this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1)}\r\n      onChange={change => this.setState({ filter: change.target.value })}\r\n      className={this.filterFound() ? styles.filterEnabled : styles.filterDisabled}\r\n      onKeyPress={event =>\r\n                  event.key === \"Enter\" ? this.addFilter() : \"\"\r\n                }/>\r\n            <button\r\n                  disabled={!this.filterFound()}\r\n                  onClick={() => this.addFilter()}\r\n                  className={\r\n                    this.filterFound()\r\n                      ? styles.buttonFilter\r\n                      : styles.buttonFilterDisabled\r\n                  }\r\n                >\r\n                  Legg til\r\n                </button>\r\n      {this.state.selectedFilters.map(filter =>\r\n      <div className={styles.filterList} onClick={() => this.removeFilter(filter)} >{filter}</div>)}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}