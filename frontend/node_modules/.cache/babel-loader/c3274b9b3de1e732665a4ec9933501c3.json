{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\Feed\\\\Feed.js\";\nimport React from \"react\";\nimport Post from \"../Post/Post\";\nimport Card from \"../Card/Card\";\nimport NewExercise from \"../NewPost/NewExercise\";\nimport NewWorkout from \"../NewPost/NewWorkout\";\nimport NewMusclegroup from \"../NewPost/NewMusclegroup\";\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\nimport styles from \"../../App.module.css\";\nimport left from \"../../icons/left.png\";\nimport right from \"../../icons/right.png\";\nimport search from \"../../icons/search.png\";\nimport { getLatestExercises, getLatestWorkouts } from \"../../actions/posts\";\nimport { getMusclegroups } from \"../../actions/musclegroups\";\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterFound = () => {\n      var match = \"\";\n\n      if (!this.state.selectedFilters.includes(this.state.filter)) {\n        this.state.musclegroups.forEach(a => this.state.filter === a.name ? match = a.name : \"\") || this.state.exercises.forEach(a => this.state.filter === a.title ? match = a.title : \"\");\n        return match;\n      }\n    };\n\n    this.checkSelectedFilters = post => {\n      var postExercises = [];\n      var postMusclegroups = [];\n      var match = true;\n\n      if (post.exercises) {\n        post.exercises.forEach(a => postExercises.push(a.title));\n        post.exercises.forEach(exercise => exercise.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup.name)));\n      } else if (post.musclegroups) {\n        postExercises.push(post.title);\n        post.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup.name));\n      }\n\n      this.state.selectedFilters.forEach(a => postExercises.includes(a) || postMusclegroups.includes(a) ? \"\" : match = false);\n      return match;\n    };\n\n    this.state = {\n      musclegroups: {},\n      exercises: {},\n      workouts: {},\n      selectedFilters: [],\n      filter: \"\",\n      loadingExercises: true,\n      loadingMusclegroups: true,\n      loadingWorkouts: true,\n      scroller: 0,\n      createMusclegroup: false\n    };\n  }\n\n  componentDidMount() {\n    this.buildFeed();\n  }\n\n  buildFeed() {\n    this.props.defaultHome();\n    this.setState({\n      createMusclegroup: false\n    });\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data\n    })).then(() => this.setState({\n      loadingMusclegroups: false\n    }));\n    getLatestExercises().then(data => this.setState({\n      exercises: data\n    })).then(() => this.setState({\n      loadingExercises: false\n    }));\n    getLatestWorkouts().then(data => this.setState({\n      workouts: data\n    })).then(() => this.setState({\n      loadingWorkouts: false\n    }));\n  }\n\n  reFetchMuscleGroups() {\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data,\n      createMusclegroup: false\n    }));\n  }\n\n  addFilter() {\n    if (this.filterFound()) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, this.state.filter],\n        filter: \"\"\n      });\n    }\n  }\n\n  removeFilter(filter) {\n    var newFilters = [];\n    this.state.selectedFilters.forEach(a => a !== filter ? newFilters.push(a) : \"\");\n    this.setState({\n      selectedFilters: newFilters\n    });\n  }\n\n  render() {\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.feedContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(SpinnerPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" Exercise-It \\xA9 \\u2022 estb. 2020 \"), React.createElement(\"div\", {\n        className: styles.filterContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Skriv inn n\\xF8kkelord\",\n        name: \"Filter\",\n        autoComplete: \"off\",\n        className: styles.filterDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        alt: \"\",\n        className: styles.search,\n        src: search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: true,\n        className: styles.buttonFilterDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Legg til filter\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.exercises.filter(post => this.checkSelectedFilters(post)).length === 0 && this.state.workouts.filter(post => this.checkSelectedFilters(post)).length === 0 ? styles.headerEmpty : styles.mainHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.exercises.filter(post => this.checkSelectedFilters(post)).length === 0 && this.state.workouts.filter(post => this.checkSelectedFilters(post)).length === 0 ? \"Ingen treff ..\" : this.props.user.username ? \"Hei, \" + this.props.user.username + \"!\" : \"Velkommen!\")), React.createElement(NewExercise, {\n      musclegroups: this.state.musclegroups,\n      createMusclegroup: () => this.setState({\n        createMusclegroup: !this.state.createMusclegroup\n      }),\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewExercise,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(NewWorkout, {\n      exercises: this.state.exercises,\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewWorkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(NewMusclegroup, {\n      musclegroups: this.state.musclegroups,\n      reFetch: () => this.reFetchMuscleGroups(),\n      isCreating: !this.props.creatingNewWorkout && this.props.creatingNewExercise && this.state.createMusclegroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, !this.props.hiddenWorkouts ? this.state.selectedFilters.length === 0 ? this.state.workouts.slice(0, 2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post, \"workout\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))) : this.state.workouts.map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post, \"workout\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), \" \") : \"\") : \"\")), React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, !this.props.hiddenExercises ? this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts ? React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => this.state.scroller !== 0 ? this.setState({\n        scroller: this.state.scroller - 3\n      }) : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"<\",\n      className: this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled,\n      src: left,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), \" \"), this.state.exercises.slice(this.state.scroller, this.state.scroller + 3).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post, \"exercise\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Card, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      onClick: () => this.state.scroller + 4 < this.state.exercises.length ? this.setState({\n        scroller: this.state.scroller + 3\n      }) : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \">\",\n      className: this.state.scroller + 4 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled,\n      src: right,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), \" \")) : React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, this.state.exercises.map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post, \"exercise\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(Post, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      exercise: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })) : \"\")) : \"\", this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts && this.state.workouts.slice(2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post, \"workout\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))), \" \") : \"\")), React.createElement(\"div\", {\n      className: styles.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \" Exercise-It \\xA9 \\u2022 est. 2020 \"), React.createElement(\"div\", {\n      className: styles.filterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Skriv inn n\\xF8kkelord\",\n      name: \"Filter\",\n      autoComplete: \"off\",\n      value: this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1),\n      onChange: change => this.setState({\n        filter: change.target.value\n      }),\n      className: this.filterFound() ? styles.filterEnabled : styles.filterDisabled,\n      onKeyPress: event => event.key === \"Enter\" ? this.addFilter() : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"\",\n      className: styles.search,\n      src: search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.filterFound(),\n      onClick: () => this.addFilter(),\n      className: this.filterFound() ? styles.buttonFilter : styles.buttonFilterDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Legg til filter\"), this.state.selectedFilters.map(filter => React.createElement(\"div\", {\n      className: styles.filterList,\n      onClick: () => this.removeFilter(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, \"- \" + filter))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/components/Feed/Feed.js"],"names":["React","Post","Card","NewExercise","NewWorkout","NewMusclegroup","SpinnerPost","styles","left","right","search","getLatestExercises","getLatestWorkouts","getMusclegroups","Feed","Component","constructor","props","filterFound","match","state","selectedFilters","includes","filter","musclegroups","forEach","a","name","exercises","title","checkSelectedFilters","post","postExercises","postMusclegroups","push","exercise","musclegroup","workouts","loadingExercises","loadingMusclegroups","loadingWorkouts","scroller","createMusclegroup","componentDidMount","buildFeed","defaultHome","setState","then","data","reFetchMuscleGroups","addFilter","removeFilter","newFilters","render","feedContainer","footer","filterContainer","filterDisabled","buttonFilterDisabled","length","headerEmpty","mainHeader","user","username","creatingNewExercise","creatingNewWorkout","feed","hiddenWorkouts","slice","map","singlePost","date","image","content","loading","hiddenExercises","cardContainer","arrow","arrowDisabled","url","sets","reps","charAt","toUpperCase","change","target","value","filterEnabled","event","key","buttonFilter","filterList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,qBAAtD;AACA,SAASC,eAAT,QAAgC,4BAAhC;;AAEA,MAAMC,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyCnBC,WAzCmB,GAyCL,MAAM;AAClB,UAAIC,KAAK,GAAG,EAAZ;;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,QAA3B,CAAoC,KAAKF,KAAL,CAAWG,MAA/C,CAAL,EAA6D;AAC3D,aAAKH,KAAL,CAAWI,YAAX,CAAwBC,OAAxB,CAAgCC,CAAC,IAC/B,KAAKN,KAAL,CAAWG,MAAX,KAAsBG,CAAC,CAACC,IAAxB,GAAgCR,KAAK,GAAGO,CAAC,CAACC,IAA1C,GAAkD,EADpD,KAGE,KAAKP,KAAL,CAAWQ,SAAX,CAAqBH,OAArB,CAA6BC,CAAC,IAC5B,KAAKN,KAAL,CAAWG,MAAX,KAAsBG,CAAC,CAACG,KAAxB,GAAiCV,KAAK,GAAGO,CAAC,CAACG,KAA3C,GAAoD,EADtD,CAHF;AAMA,eAAOV,KAAP;AACD;AACF,KApDkB;;AAAA,SAuEnBW,oBAvEmB,GAuEIC,IAAI,IAAI;AAC7B,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,gBAAgB,GAAG,EAAvB;AACA,UAAId,KAAK,GAAG,IAAZ;;AACA,UAAIY,IAAI,CAACH,SAAT,EAAoB;AAClBG,QAAAA,IAAI,CAACH,SAAL,CAAeH,OAAf,CAAuBC,CAAC,IAAIM,aAAa,CAACE,IAAd,CAAmBR,CAAC,CAACG,KAArB,CAA5B;AACAE,QAAAA,IAAI,CAACH,SAAL,CAAeH,OAAf,CAAuBU,QAAQ,IAC7BA,QAAQ,CAACX,YAAT,CAAsBC,OAAtB,CAA8BW,WAAW,IACvCH,gBAAgB,CAACC,IAAjB,CAAsBE,WAAW,CAACT,IAAlC,CADF,CADF;AAKD,OAPD,MAOO,IAAII,IAAI,CAACP,YAAT,EAAuB;AAC5BQ,QAAAA,aAAa,CAACE,IAAd,CAAmBH,IAAI,CAACF,KAAxB;AACAE,QAAAA,IAAI,CAACP,YAAL,CAAkBC,OAAlB,CAA0BW,WAAW,IACnCH,gBAAgB,CAACC,IAAjB,CAAsBE,WAAW,CAACT,IAAlC,CADF;AAGD;;AACD,WAAKP,KAAL,CAAWC,eAAX,CAA2BI,OAA3B,CAAmCC,CAAC,IAClCM,aAAa,CAACV,QAAd,CAAuBI,CAAvB,KAA6BO,gBAAgB,CAACX,QAAjB,CAA0BI,CAA1B,CAA7B,GACI,EADJ,GAEKP,KAAK,GAAG,KAHf;AAKA,aAAOA,KAAP;AACD,KA9FkB;;AAGjB,SAAKC,KAAL,GAAa;AACXI,MAAAA,YAAY,EAAE,EADH;AAEXI,MAAAA,SAAS,EAAE,EAFA;AAGXS,MAAAA,QAAQ,EAAE,EAHC;AAIXhB,MAAAA,eAAe,EAAE,EAJN;AAKXE,MAAAA,MAAM,EAAE,EALG;AAMXe,MAAAA,gBAAgB,EAAE,IANP;AAOXC,MAAAA,mBAAmB,EAAE,IAPV;AAQXC,MAAAA,eAAe,EAAE,IARN;AASXC,MAAAA,QAAQ,EAAE,CATC;AAUXC,MAAAA,iBAAiB,EAAE;AAVR,KAAb;AAYD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AAEDA,EAAAA,SAAS,GAAG;AACV,SAAK3B,KAAL,CAAW4B,WAAX;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,iBAAiB,EAAE;AAArB,KAAd;AACA7B,IAAAA,eAAe,GACZkC,IADH,CACQC,IAAI,IAAI,KAAKF,QAAL,CAAc;AAAEtB,MAAAA,YAAY,EAAEwB;AAAhB,KAAd,CADhB,EAEGD,IAFH,CAEQ,MAAM,KAAKD,QAAL,CAAc;AAAEP,MAAAA,mBAAmB,EAAE;AAAvB,KAAd,CAFd;AAGA5B,IAAAA,kBAAkB,GACfoC,IADH,CACQC,IAAI,IAAI,KAAKF,QAAL,CAAc;AAAElB,MAAAA,SAAS,EAAEoB;AAAb,KAAd,CADhB,EAEGD,IAFH,CAEQ,MAAM,KAAKD,QAAL,CAAc;AAAER,MAAAA,gBAAgB,EAAE;AAApB,KAAd,CAFd;AAGA1B,IAAAA,iBAAiB,GACdmC,IADH,CACQC,IAAI,IAAI,KAAKF,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEW;AAAZ,KAAd,CADhB,EAEGD,IAFH,CAEQ,MAAM,KAAKD,QAAL,CAAc;AAAEN,MAAAA,eAAe,EAAE;AAAnB,KAAd,CAFd;AAGD;;AAEDS,EAAAA,mBAAmB,GAAG;AACpBpC,IAAAA,eAAe,GAAGkC,IAAlB,CAAuBC,IAAI,IACzB,KAAKF,QAAL,CAAc;AAAEtB,MAAAA,YAAY,EAAEwB,IAAhB;AAAsBN,MAAAA,iBAAiB,EAAE;AAAzC,KAAd,CADF;AAGD;;AAeDQ,EAAAA,SAAS,GAAG;AACV,QAAI,KAAKhC,WAAL,EAAJ,EAAwB;AACtB,WAAK4B,QAAL,CAAc;AACZzB,QAAAA,eAAe,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,eAAf,EAAgC,KAAKD,KAAL,CAAWG,MAA3C,CADL;AAEZA,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID;AACF;;AAED4B,EAAAA,YAAY,CAAC5B,MAAD,EAAS;AACnB,QAAI6B,UAAU,GAAG,EAAjB;AACA,SAAKhC,KAAL,CAAWC,eAAX,CAA2BI,OAA3B,CAAmCC,CAAC,IAClCA,CAAC,KAAKH,MAAN,GAAe6B,UAAU,CAAClB,IAAX,CAAgBR,CAAhB,CAAf,GAAoC,EADtC;AAGA,SAAKoB,QAAL,CAAc;AAAEzB,MAAAA,eAAe,EAAE+B;AAAnB,KAAd;AACD;;AA2BDC,EAAAA,MAAM,GAAG;AACP,QACE,KAAKjC,KAAL,CAAWmB,mBAAX,IACA,KAAKnB,KAAL,CAAWkB,gBADX,IAEA,KAAKlB,KAAL,CAAWoB,eAHb,EAIE;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEjC,MAAM,CAAC+C,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAE/C,MAAM,CAACgD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFF,EAGE;AAAK,QAAA,SAAS,EAAEhD,MAAM,CAACiD,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,wBADd;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,SAAS,EAAEjD,MAAM,CAACkD,cAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,SAAS,EAAElD,MAAM,CAACG,MAA9B;AAAsC,QAAA,GAAG,EAAEA,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAQ,QAAA,QAAQ,EAAE,IAAlB;AAAwB,QAAA,SAAS,EAAEH,MAAM,CAACmD,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARF,CAHF,CADF,CADF;AAoBD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEnD,MAAM,CAAC+C,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EACP,KAAKlC,KAAL,CAAWQ,SAAX,CAAqBL,MAArB,CAA4BQ,IAAI,IAC9B,KAAKD,oBAAL,CAA0BC,IAA1B,CADF,EAEE4B,MAFF,KAEa,CAFb,IAGA,KAAKvC,KAAL,CAAWiB,QAAX,CAAoBd,MAApB,CAA2BQ,IAAI,IAC7B,KAAKD,oBAAL,CAA0BC,IAA1B,CADF,EAEE4B,MAFF,KAEa,CALb,GAMIpD,MAAM,CAACqD,WANX,GAOIrD,MAAM,CAACsD,UATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzC,KAAL,CAAWQ,SAAX,CAAqBL,MAArB,CAA4BQ,IAAI,IAC/B,KAAKD,oBAAL,CAA0BC,IAA1B,CADD,EAEC4B,MAFD,KAEY,CAFZ,IAGD,KAAKvC,KAAL,CAAWiB,QAAX,CAAoBd,MAApB,CAA2BQ,IAAI,IAC7B,KAAKD,oBAAL,CAA0BC,IAA1B,CADF,EAEE4B,MAFF,KAEa,CALZ,GAMG,gBANH,GAOG,KAAK1C,KAAL,CAAW6C,IAAX,CAAgBC,QAAhB,GACA,UAAU,KAAK9C,KAAL,CAAW6C,IAAX,CAAgBC,QAA1B,GAAqC,GADrC,GAEA,YAVN,CAZF,CADF,EA0BE,oBAAC,WAAD;AACE,MAAA,YAAY,EAAE,KAAK3C,KAAL,CAAWI,YAD3B;AAEE,MAAA,iBAAiB,EAAE,MACjB,KAAKsB,QAAL,CAAc;AACZJ,QAAAA,iBAAiB,EAAE,CAAC,KAAKtB,KAAL,CAAWsB;AADnB,OAAd,CAHJ;AAOE,MAAA,OAAO,EAAE,MAAM,KAAKE,SAAL,EAPjB;AAQE,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW6C,IARnB;AASE,MAAA,UAAU,EAAE,KAAK7C,KAAL,CAAW+C,mBATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,EAqCE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAE,KAAK5C,KAAL,CAAWQ,SADxB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKgB,SAAL,EAFjB;AAGE,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAW6C,IAHnB;AAIE,MAAA,UAAU,EAAE,KAAK7C,KAAL,CAAWgD,kBAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,EA2CE,oBAAC,cAAD;AACE,MAAA,YAAY,EAAE,KAAK7C,KAAL,CAAWI,YAD3B;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKyB,mBAAL,EAFjB;AAGE,MAAA,UAAU,EACR,CAAC,KAAKhC,KAAL,CAAWgD,kBAAZ,IACA,KAAKhD,KAAL,CAAW+C,mBADX,IAEA,KAAK5C,KAAL,CAAWsB,iBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EAoDE;AAAK,MAAA,SAAS,EAAEnC,MAAM,CAAC2D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKjD,KAAL,CAAWkD,cAAZ,GACG,KAAK/C,KAAL,CAAWC,eAAX,CAA2BsC,MAA3B,KAAsC,CAAtC,GACE,KAAKvC,KAAL,CAAWiB,QAAX,CAAoB+B,KAApB,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,GAAhC,CAAoCtC,IAAI,IACtC;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWqD,UAAX,CAAsBvC,IAAtB,EAA4B,SAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IAAI,CAAC+B,IADb;AAEE,MAAA,IAAI,EAAE/B,IAAI,CAACwC,IAFb;AAGE,MAAA,KAAK,EAAExC,IAAI,CAACF,KAHd;AAIE,MAAA,KAAK,EAAEE,IAAI,CAACyC,KAJd;AAKE,MAAA,OAAO,EAAEzC,IAAI,CAAC0C,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,GAYE,KAAKrD,KAAL,CAAWiB,QAAX,CAAoBgC,GAApB,CAAwBtC,IAAI,IAC1B,KAAKD,oBAAL,CAA0BC,IAA1B,IACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWqD,UAAX,CAAsBvC,IAAtB,EAA4B,SAA5B,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IAAI,CAAC+B,IADb;AAEE,MAAA,IAAI,EAAE/B,IAAI,CAACwC,IAFb;AAGE,MAAA,KAAK,EAAExC,IAAI,CAACF,KAHd;AAIE,MAAA,KAAK,EAAEE,IAAI,CAACyC,KAJd;AAKE,MAAA,OAAO,EAAEzC,IAAI,CAAC0C,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EASK,GATL,CADF,GAaE,EAdJ,CAbL,GA8BG,EA/BN,CApDF,CADF,EAuFE;AAAK,MAAA,SAAS,EAAElE,MAAM,CAAC+C,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAE/C,MAAM,CAAC2D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAK9C,KAAL,CAAWsD,OAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKzD,KAAL,CAAW0D,eAAZ,GACC,KAAKvD,KAAL,CAAWC,eAAX,CAA2BsC,MAA3B,KAAsC,CAAtC,IACA,CAAC,KAAK1C,KAAL,CAAWkD,cADZ,GAEE;AAAK,MAAA,SAAS,EAAE5D,MAAM,CAACqE,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MACP,KAAKxD,KAAL,CAAWqB,QAAX,KAAwB,CAAxB,GACI,KAAKK,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWqB,QAAX,GAAsB;AADpB,OAAd,CADJ,GAII,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AACE,MAAA,GAAG,EAAC,GADN;AAEE,MAAA,SAAS,EACP,KAAKrB,KAAL,CAAWqB,QAAX,KAAwB,CAAxB,GACIlC,MAAM,CAACsE,KADX,GAEItE,MAAM,CAACuE,aALf;AAOE,MAAA,GAAG,EAAEtE,IAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBK,GAjBL,CADF,EAoBG,KAAKY,KAAL,CAAWQ,SAAX,CACEwC,KADF,CACQ,KAAKhD,KAAL,CAAWqB,QADnB,EAC6B,KAAKrB,KAAL,CAAWqB,QAAX,GAAsB,CADnD,EAEE4B,GAFF,CAEMtC,IAAI,IACP;AACE,MAAA,OAAO,EAAE,MACP,KAAKd,KAAL,CAAWqD,UAAX,CAAsBvC,IAAtB,EAA4B,UAA5B,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACgD,GADZ;AAEE,MAAA,IAAI,EAAEhD,IAAI,CAAC+B,IAFb;AAGE,MAAA,IAAI,EAAE/B,IAAI,CAACwC,IAHb;AAIE,MAAA,KAAK,EAAExC,IAAI,CAACF,KAJd;AAKE,MAAA,KAAK,EAAEE,IAAI,CAACyC,KALd;AAME,MAAA,OAAO,EAAEzC,IAAI,CAAC0C,OANhB;AAOE,MAAA,IAAI,EAAE1C,IAAI,CAACiD,IAPb;AAQE,MAAA,IAAI,EAAEjD,IAAI,CAACkD,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAHH,CApBH,EAwCE;AACE,MAAA,OAAO,EAAE,MACP,KAAK7D,KAAL,CAAWqB,QAAX,GAAsB,CAAtB,GAA0B,KAAKrB,KAAL,CAAWQ,SAAX,CAAqB+B,MAA/C,GACI,KAAKb,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWqB,QAAX,GAAsB;AADpB,OAAd,CADJ,GAII,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AACE,MAAA,GAAG,EAAC,GADN;AAEE,MAAA,SAAS,EACP,KAAKrB,KAAL,CAAWqB,QAAX,GAAsB,CAAtB,GACA,KAAKrB,KAAL,CAAWQ,SAAX,CAAqB+B,MADrB,GAEIpD,MAAM,CAACsE,KAFX,GAGItE,MAAM,CAACuE,aANf;AAQE,MAAA,GAAG,EAAErE,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAkBK,GAlBL,CAxCF,CAFF,GAgEE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAAC2D,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9C,KAAL,CAAWQ,SAAX,CAAqByC,GAArB,CAAyBtC,IAAI,IAC5B,KAAKD,oBAAL,CAA0BC,IAA1B,IACE;AACE,MAAA,OAAO,EAAE,MACP,KAAKd,KAAL,CAAWqD,UAAX,CAAsBvC,IAAtB,EAA4B,UAA5B,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACgD,GADZ;AAEE,MAAA,IAAI,EAAEhD,IAAI,CAAC+B,IAFb;AAGE,MAAA,IAAI,EAAE/B,IAAI,CAACwC,IAHb;AAIE,MAAA,KAAK,EAAExC,IAAI,CAACF,KAJd;AAKE,MAAA,KAAK,EAAEE,IAAI,CAACyC,KALd;AAME,MAAA,OAAO,EAAEzC,IAAI,CAAC0C,OANhB;AAOE,MAAA,IAAI,EAAE1C,IAAI,CAACiD,IAPb;AAQE,MAAA,IAAI,EAAEjD,IAAI,CAACkD,IARb;AASE,MAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,GAmBE,EApBH,CADH,CAjEH,GA4FC,EA7FJ,EA+FG,KAAK7D,KAAL,CAAWC,eAAX,CAA2BsC,MAA3B,KAAsC,CAAtC,IACC,CAAC,KAAK1C,KAAL,CAAWkD,cADb,IAEC,KAAK/C,KAAL,CAAWiB,QAAX,CAAoB+B,KAApB,CAA0B,CAA1B,EAA6BC,GAA7B,CAAiCtC,IAAI,IACnC;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKd,KAAL,CAAWqD,UAAX,CAAsBvC,IAAtB,EAA4B,SAA5B,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IAAI,CAAC+B,IADb;AAEE,MAAA,IAAI,EAAE/B,IAAI,CAACwC,IAFb;AAGE,MAAA,KAAK,EAAExC,IAAI,CAACF,KAHd;AAIE,MAAA,KAAK,EAAEE,IAAI,CAACyC,KAJd;AAKE,MAAA,OAAO,EAAEzC,IAAI,CAAC0C,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAjGJ,EA2GQ,GA3GR,CADD,GA+GC,EAhHJ,CADF,CAvFF,EA4ME;AAAK,MAAA,SAAS,EAAElE,MAAM,CAACgD,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CA5MF,EA6ME;AAAK,MAAA,SAAS,EAAEhD,MAAM,CAACiD,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,wBADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,YAAY,EAAC,KAHf;AAIE,MAAA,KAAK,EACH,KAAKpC,KAAL,CAAWG,MAAX,CAAkB2D,MAAlB,CAAyB,CAAzB,EAA4BC,WAA5B,KACA,KAAK/D,KAAL,CAAWG,MAAX,CAAkB6C,KAAlB,CAAwB,CAAxB,CANJ;AAQE,MAAA,QAAQ,EAAEgB,MAAM,IAAI,KAAKtC,QAAL,CAAc;AAAEvB,QAAAA,MAAM,EAAE6D,MAAM,CAACC,MAAP,CAAcC;AAAxB,OAAd,CARtB;AASE,MAAA,SAAS,EACP,KAAKpE,WAAL,KAAqBX,MAAM,CAACgF,aAA5B,GAA4ChF,MAAM,CAACkD,cAVvD;AAYE,MAAA,UAAU,EAAE+B,KAAK,IACfA,KAAK,CAACC,GAAN,KAAc,OAAd,GAAwB,KAAKvC,SAAL,EAAxB,GAA2C,EAb/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAiBE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,SAAS,EAAE3C,MAAM,CAACG,MAA9B;AAAsC,MAAA,GAAG,EAAEA,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAkBE;AACE,MAAA,QAAQ,EAAE,CAAC,KAAKQ,WAAL,EADb;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKgC,SAAL,EAFjB;AAGE,MAAA,SAAS,EACP,KAAKhC,WAAL,KACIX,MAAM,CAACmF,YADX,GAEInF,MAAM,CAACmD,oBANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlBF,EA8BG,KAAKtC,KAAL,CAAWC,eAAX,CAA2BgD,GAA3B,CAA+B9C,MAAM,IACpC;AACE,MAAA,SAAS,EAAEhB,MAAM,CAACoF,UADpB;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKxC,YAAL,CAAkB5B,MAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,OAAOA,MAJV,CADD,CA9BH,CA7MF,CADF;AAuPD;;AAnXgC;;AAsXnC,eAAeT,IAAf","sourcesContent":["import React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport Card from \"../Card/Card\";\r\nimport NewExercise from \"../NewPost/NewExercise\";\r\nimport NewWorkout from \"../NewPost/NewWorkout\";\r\nimport NewMusclegroup from \"../NewPost/NewMusclegroup\";\r\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\r\nimport styles from \"../../App.module.css\";\r\nimport left from \"../../icons/left.png\";\r\nimport right from \"../../icons/right.png\";\r\nimport search from \"../../icons/search.png\";\r\n\r\nimport { getLatestExercises, getLatestWorkouts } from \"../../actions/posts\";\r\nimport { getMusclegroups } from \"../../actions/musclegroups\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      musclegroups: {},\r\n      exercises: {},\r\n      workouts: {},\r\n      selectedFilters: [],\r\n      filter: \"\",\r\n      loadingExercises: true,\r\n      loadingMusclegroups: true,\r\n      loadingWorkouts: true,\r\n      scroller: 0,\r\n      createMusclegroup: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildFeed();\r\n  }\r\n\r\n  buildFeed() {\r\n    this.props.defaultHome();\r\n    this.setState({ createMusclegroup: false });\r\n    getMusclegroups()\r\n      .then(data => this.setState({ musclegroups: data }))\r\n      .then(() => this.setState({ loadingMusclegroups: false }));\r\n    getLatestExercises()\r\n      .then(data => this.setState({ exercises: data }))\r\n      .then(() => this.setState({ loadingExercises: false }));\r\n    getLatestWorkouts()\r\n      .then(data => this.setState({ workouts: data }))\r\n      .then(() => this.setState({ loadingWorkouts: false }));\r\n  }\r\n\r\n  reFetchMuscleGroups() {\r\n    getMusclegroups().then(data =>\r\n      this.setState({ musclegroups: data, createMusclegroup: false })\r\n    );\r\n  }\r\n\r\n  filterFound = () => {\r\n    var match = \"\";\r\n    if (!this.state.selectedFilters.includes(this.state.filter)) {\r\n      this.state.musclegroups.forEach(a =>\r\n        this.state.filter === a.name ? (match = a.name) : \"\"\r\n      ) ||\r\n        this.state.exercises.forEach(a =>\r\n          this.state.filter === a.title ? (match = a.title) : \"\"\r\n        );\r\n      return match;\r\n    }\r\n  };\r\n\r\n  addFilter() {\r\n    if (this.filterFound()) {\r\n      this.setState({\r\n        selectedFilters: [...this.state.selectedFilters, this.state.filter],\r\n        filter: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  removeFilter(filter) {\r\n    var newFilters = [];\r\n    this.state.selectedFilters.forEach(a =>\r\n      a !== filter ? newFilters.push(a) : \"\"\r\n    );\r\n    this.setState({ selectedFilters: newFilters });\r\n  }\r\n\r\n  checkSelectedFilters = post => {\r\n    var postExercises = [];\r\n    var postMusclegroups = [];\r\n    var match = true;\r\n    if (post.exercises) {\r\n      post.exercises.forEach(a => postExercises.push(a.title));\r\n      post.exercises.forEach(exercise =>\r\n        exercise.musclegroups.forEach(musclegroup =>\r\n          postMusclegroups.push(musclegroup.name)\r\n        )\r\n      );\r\n    } else if (post.musclegroups) {\r\n      postExercises.push(post.title);\r\n      post.musclegroups.forEach(musclegroup =>\r\n        postMusclegroups.push(musclegroup.name)\r\n      );\r\n    }\r\n    this.state.selectedFilters.forEach(a =>\r\n      postExercises.includes(a) || postMusclegroups.includes(a)\r\n        ? \"\"\r\n        : (match = false)\r\n    );\r\n    return match;\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.state.loadingMusclegroups ||\r\n      this.state.loadingExercises ||\r\n      this.state.loadingWorkouts\r\n    ) {\r\n      return (\r\n        <div>\r\n          <div className={styles.feedContainer}>\r\n            <SpinnerPost />\r\n            <div className={styles.footer}> Exercise-It © • estb. 2020 </div>\r\n            <div className={styles.filterContainer}>\r\n              <input\r\n                placeholder=\"Skriv inn nøkkelord\"\r\n                name=\"Filter\"\r\n                autoComplete=\"off\"\r\n                className={styles.filterDisabled}\r\n              />\r\n              <img alt=\"\" className={styles.search} src={search} />\r\n              <button disabled={true} className={styles.buttonFilterDisabled}>\r\n                Legg til filter\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={styles.feedContainer}>\r\n          <div\r\n            className={\r\n              this.state.exercises.filter(post =>\r\n                this.checkSelectedFilters(post)\r\n              ).length === 0 &&\r\n              this.state.workouts.filter(post =>\r\n                this.checkSelectedFilters(post)\r\n              ).length === 0\r\n                ? styles.headerEmpty\r\n                : styles.mainHeader\r\n            }\r\n          >\r\n            <h1>\r\n              {this.state.exercises.filter(post =>\r\n                this.checkSelectedFilters(post)\r\n              ).length === 0 &&\r\n              this.state.workouts.filter(post =>\r\n                this.checkSelectedFilters(post)\r\n              ).length === 0\r\n                ? \"Ingen treff ..\"\r\n                : this.props.user.username\r\n                ? \"Hei, \" + this.props.user.username + \"!\"\r\n                : \"Velkommen!\"}\r\n            </h1>\r\n          </div>\r\n          <NewExercise\r\n            musclegroups={this.state.musclegroups}\r\n            createMusclegroup={() =>\r\n              this.setState({\r\n                createMusclegroup: !this.state.createMusclegroup\r\n              })\r\n            }\r\n            reFetch={() => this.buildFeed()}\r\n            user={this.props.user}\r\n            isCreating={this.props.creatingNewExercise}\r\n          />\r\n          <NewWorkout\r\n            exercises={this.state.exercises}\r\n            reFetch={() => this.buildFeed()}\r\n            user={this.props.user}\r\n            isCreating={this.props.creatingNewWorkout}\r\n          />\r\n          <NewMusclegroup\r\n            musclegroups={this.state.musclegroups}\r\n            reFetch={() => this.reFetchMuscleGroups()}\r\n            isCreating={\r\n              !this.props.creatingNewWorkout &&\r\n              this.props.creatingNewExercise &&\r\n              this.state.createMusclegroup\r\n            }\r\n          />\r\n          <div className={styles.feed}>\r\n            {!this.props.hiddenWorkouts\r\n              ? this.state.selectedFilters.length === 0\r\n                ? this.state.workouts.slice(0, 2).map(post => (\r\n                    <div onClick={() => this.props.singlePost(post, \"workout\")}>\r\n                      <Post\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                      />\r\n                    </div>\r\n                  ))\r\n                : this.state.workouts.map(post =>\r\n                    this.checkSelectedFilters(post) ? (\r\n                      <div\r\n                        onClick={() => this.props.singlePost(post, \"workout\")}\r\n                      >\r\n                        <Post\r\n                          user={post.user}\r\n                          date={post.date}\r\n                          title={post.title}\r\n                          image={post.image}\r\n                          content={post.content}\r\n                        />{\" \"}\r\n                      </div>\r\n                    ) : (\r\n                      \"\"\r\n                    )\r\n                  )\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.feed}>\r\n            {!this.state.loading ? (\r\n              <div>\r\n                {!this.props.hiddenExercises ? (\r\n                  this.state.selectedFilters.length === 0 &&\r\n                  !this.props.hiddenWorkouts ? (\r\n                    <div className={styles.cardContainer}>\r\n                      <div\r\n                        onClick={() =>\r\n                          this.state.scroller !== 0\r\n                            ? this.setState({\r\n                                scroller: this.state.scroller - 3\r\n                              })\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <img\r\n                          alt=\"<\"\r\n                          className={\r\n                            this.state.scroller !== 0\r\n                              ? styles.arrow\r\n                              : styles.arrowDisabled\r\n                          }\r\n                          src={left}\r\n                        />{\" \"}\r\n                      </div>\r\n                      {this.state.exercises\r\n                        .slice(this.state.scroller, this.state.scroller + 3)\r\n                        .map(post => (\r\n                          <div\r\n                            onClick={() =>\r\n                              this.props.singlePost(post, \"exercise\")\r\n                            }\r\n                          >\r\n                            <Card\r\n                              url={post.url}\r\n                              user={post.user}\r\n                              date={post.date}\r\n                              title={post.title}\r\n                              image={post.image}\r\n                              content={post.content}\r\n                              sets={post.sets}\r\n                              reps={post.reps}\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      <div\r\n                        onClick={() =>\r\n                          this.state.scroller + 4 < this.state.exercises.length\r\n                            ? this.setState({\r\n                                scroller: this.state.scroller + 3\r\n                              })\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <img\r\n                          alt=\">\"\r\n                          className={\r\n                            this.state.scroller + 4 <\r\n                            this.state.exercises.length\r\n                              ? styles.arrow\r\n                              : styles.arrowDisabled\r\n                          }\r\n                          src={right}\r\n                        />{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className={styles.feed}>\r\n                      {this.state.exercises.map(post =>\r\n                        this.checkSelectedFilters(post) ? (\r\n                          <div\r\n                            onClick={() =>\r\n                              this.props.singlePost(post, \"exercise\")\r\n                            }\r\n                          >\r\n                            <Post\r\n                              url={post.url}\r\n                              user={post.user}\r\n                              date={post.date}\r\n                              title={post.title}\r\n                              image={post.image}\r\n                              content={post.content}\r\n                              sets={post.sets}\r\n                              reps={post.reps}\r\n                              exercise\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          \"\"\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {this.state.selectedFilters.length === 0 &&\r\n                  !this.props.hiddenWorkouts &&\r\n                  this.state.workouts.slice(2).map(post => (\r\n                    <div onClick={() => this.props.singlePost(post, \"workout\")}>\r\n                      <Post\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                      />\r\n                    </div>\r\n                  ))}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={styles.footer}> Exercise-It © • est. 2020 </div>\r\n        <div className={styles.filterContainer}>\r\n          <input\r\n            placeholder=\"Skriv inn nøkkelord\"\r\n            name=\"Filter\"\r\n            autoComplete=\"off\"\r\n            value={\r\n              this.state.filter.charAt(0).toUpperCase() +\r\n              this.state.filter.slice(1)\r\n            }\r\n            onChange={change => this.setState({ filter: change.target.value })}\r\n            className={\r\n              this.filterFound() ? styles.filterEnabled : styles.filterDisabled\r\n            }\r\n            onKeyPress={event =>\r\n              event.key === \"Enter\" ? this.addFilter() : \"\"\r\n            }\r\n          />\r\n          <img alt=\"\" className={styles.search} src={search} />\r\n          <button\r\n            disabled={!this.filterFound()}\r\n            onClick={() => this.addFilter()}\r\n            className={\r\n              this.filterFound()\r\n                ? styles.buttonFilter\r\n                : styles.buttonFilterDisabled\r\n            }\r\n          >\r\n            Legg til filter\r\n          </button>\r\n\r\n          {this.state.selectedFilters.map(filter => (\r\n            <div\r\n              className={styles.filterList}\r\n              onClick={() => this.removeFilter(filter)}\r\n            >\r\n              {\"- \" + filter}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}