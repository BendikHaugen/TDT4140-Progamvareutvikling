{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bendi\\\\Desktop\\\\pu\\\\62\\\\frontend\\\\src\\\\components\\\\Feed\\\\Feed.js\";\nimport React from \"react\";\nimport Post from \"../Post/Post\";\nimport Card from \"../Card/Card\";\nimport NewExercise from \"../NewPost/NewExercise\";\nimport NewWorkout from \"../NewPost/NewWorkout\";\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\nimport styles from \"../../App.module.css\";\nimport { getLatestExercises } from \"../../actions/exercises\";\nimport { getMusclegroups } from \"../../actions/musclegroups\";\nimport { getLatestWorkouts } from \"../../actions/workouts\";\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterFound = () => {\n      var match = '';\n\n      if (!this.state.selectedFilters.includes(this.state.filter)) {\n        this.state.musclegroups.forEach(a => this.state.filter === a.name ? match = a.name : '') || this.state.exercises.forEach(a => this.state.filter === a.title ? match = a.title : '');\n        return match;\n      }\n    };\n\n    this.checkSelectedFilters = post => {\n      var postExercises = [];\n      var postMusclegroups = [];\n      var match = true;\n\n      if (post.exercises) {\n        post.exercises.forEach(a => postExercises.push(a.title));\n        post.exercises.forEach(exercise => exercise.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup.name)));\n      } else if (post.musclegroups) {\n        postExercises.push(post.title);\n        post.musclegroups.forEach(musclegroup => postMusclegroups.push(musclegroup.name));\n      }\n\n      this.state.selectedFilters.forEach(a => postExercises.includes(a) || postMusclegroups.includes(a) ? '' : match = false);\n      return match;\n    };\n\n    this.state = {\n      musclegroups: {},\n      exercises: {},\n      workouts: {},\n      selectedFilters: [],\n      filter: '',\n      loadingExercises: true,\n      loadingMusclegroups: true,\n      loadingWorkouts: true,\n      scroller: 0\n    };\n  }\n\n  componentDidMount() {\n    this.buildFeed();\n  }\n\n  buildFeed() {\n    this.props.defaultHome();\n    getMusclegroups().then(data => this.setState({\n      musclegroups: data\n    })).then(() => this.setState({\n      loadingMusclegroups: false\n    }));\n    getLatestExercises().then(data => this.setState({\n      exercises: data\n    })).then(() => this.setState({\n      loadingExercises: false\n    }));\n    getLatestWorkouts().then(data => this.setState({\n      workouts: data\n    })).then(() => this.setState({\n      loadingWorkouts: false\n    }));\n  }\n\n  addFilter() {\n    if (this.filterFound()) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, this.state.filter],\n        filter: ''\n      });\n    }\n  }\n\n  removeFilter(filter) {\n    var newFilters = [];\n    this.state.selectedFilters.forEach(a => a !== filter ? newFilters.push(a) : '');\n    this.setState({\n      selectedFilters: newFilters\n    });\n  }\n\n  render() {\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.feedContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(SpinnerPost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.mainHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.user.username ? 'Hei, ' + this.props.user.username + '!' : 'Velkommen!')), React.createElement(NewExercise, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewExercise,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(NewWorkout, {\n      reFetch: () => this.buildFeed(),\n      user: this.props.user,\n      isCreating: this.props.creatingNewWorkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, !this.props.hiddenWorkouts ? this.state.selectedFilters.length === 0 ? this.state.workouts.slice(0, 2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))) : this.state.workouts.map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), \" \") : \"\") : '')), React.createElement(\"div\", {\n      className: styles.feedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.feed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, !this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, !this.props.hiddenExercises ? this.state.selectedFilters.length === 0 ? React.createElement(\"div\", {\n      className: styles.cardContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller !== 0 ? this.setState({\n        scroller: this.state.scroller - 3\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"<\"), this.state.exercises.slice(this.state.scroller, this.state.scroller + 3).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Card, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: this.state.scroller + 3 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled,\n      onClick: () => this.state.scroller + 4 < this.state.exercises.length ? this.setState({\n        scroller: this.state.scroller + 3\n      }) : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \">\")) : this.state.exercises.map(post => this.checkSelectedFilters(post) ? React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Post, {\n      url: post.url,\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      sets: post.sets,\n      reps: post.reps,\n      exercise: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })) : '') : '', this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts && this.state.workouts.slice(2).map(post => React.createElement(\"div\", {\n      onClick: () => this.props.singlePost(post),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: post.user,\n      date: post.date,\n      title: post.title,\n      image: post.image,\n      content: post.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), \" \") : \"\")), React.createElement(\"div\", {\n      className: styles.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \" ExerciseIt \\xA9   \\u2022   estb. 2020 \"), React.createElement(\"div\", {\n      className: styles.filterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filtrer p\\xE5 muskelgrupper og \\xF8velser\",\n      name: \"Filter\",\n      autocomplete: \"off\",\n      value: this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1),\n      onChange: change => this.setState({\n        filter: change.target.value\n      }),\n      className: this.filterFound() ? styles.filterEnabled : styles.filterDisabled,\n      onKeyPress: event => event.key === \"Enter\" ? this.addFilter() : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.filterFound(),\n      onClick: () => this.addFilter(),\n      className: this.filterFound() ? styles.buttonFilter : styles.buttonFilterDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Legg til\"), this.state.selectedFilters.map(filter => React.createElement(\"div\", {\n      className: styles.filterList,\n      onClick: () => this.removeFilter(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, filter))));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/bendi/Desktop/pu/62/frontend/src/components/Feed/Feed.js"],"names":["React","Post","Card","NewExercise","NewWorkout","SpinnerPost","styles","getLatestExercises","getMusclegroups","getLatestWorkouts","Feed","Component","constructor","props","filterFound","match","state","selectedFilters","includes","filter","musclegroups","forEach","a","name","exercises","title","checkSelectedFilters","post","postExercises","postMusclegroups","push","exercise","musclegroup","workouts","loadingExercises","loadingMusclegroups","loadingWorkouts","scroller","componentDidMount","buildFeed","defaultHome","then","data","setState","addFilter","removeFilter","newFilters","render","feedContainer","mainHeader","user","username","creatingNewExercise","creatingNewWorkout","feed","hiddenWorkouts","length","slice","map","singlePost","date","image","content","loading","hiddenExercises","cardContainer","arrow","arrowDisabled","url","sets","reps","footer","filterContainer","charAt","toUpperCase","change","target","value","filterEnabled","filterDisabled","event","key","buttonFilter","buttonFilterDisabled","filterList"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport Card from \"../Card/Card\";\r\nimport NewExercise from \"../NewPost/NewExercise\"\r\nimport NewWorkout from \"../NewPost/NewWorkout\"\r\nimport SpinnerPost from \"../Spinner/SpinnerPost\";\r\nimport styles from \"../../App.module.css\";\r\n\r\nimport { getLatestExercises } from \"../../actions/exercises\";\r\nimport { getMusclegroups } from \"../../actions/musclegroups\";\r\nimport { getLatestWorkouts } from \"../../actions/workouts\";\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      musclegroups: {},\r\n      exercises: {},\r\n      workouts: {},\r\n      selectedFilters: [],\r\n      filter: '',\r\n      loadingExercises: true,\r\n      loadingMusclegroups: true,\r\n      loadingWorkouts: true,\r\n      scroller: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildFeed();\r\n  }\r\n\r\n  buildFeed() {\r\n    this.props.defaultHome();\r\n    getMusclegroups()\r\n      .then(data => this.setState({ musclegroups: data }))\r\n      .then(() => this.setState({ loadingMusclegroups: false }));\r\n    getLatestExercises()\r\n      .then(data => this.setState({ exercises: data }))\r\n      .then(() => this.setState({ loadingExercises: false }));\r\n    getLatestWorkouts()\r\n      .then(data => this.setState({ workouts: data }))\r\n      .then(() => this.setState({ loadingWorkouts: false }));\r\n  }\r\n\r\n  filterFound = () => {\r\n    var match = '';\r\n    if (!this.state.selectedFilters.includes(this.state.filter)) {\r\n    this.state.musclegroups.forEach(a => this.state.filter === a.name ? match = a.name : '') || this.state.exercises.forEach(a => this.state.filter === a.title ? match = a.title : '')\r\n    return match;\r\n    }\r\n  }\r\n\r\n  addFilter() {\r\n    if (this.filterFound()) {\r\n    this.setState({selectedFilters: [...this.state.selectedFilters, this.state.filter], filter: ''})\r\n    }\r\n  }\r\n\r\n  removeFilter(filter) {\r\n    var newFilters = [];\r\n    this.state.selectedFilters.forEach(a => a !== filter ?\r\n    newFilters.push(a) : '');\r\n    this.setState({selectedFilters: newFilters})\r\n  }\r\n\r\n  checkSelectedFilters = post => {\r\n    var postExercises = [];\r\n    var postMusclegroups = [];\r\n    var match = true;\r\n    if (post.exercises) {\r\n      post.exercises.forEach(a => postExercises.push(a.title));\r\n      post.exercises.forEach(exercise =>\r\n        exercise.musclegroups.forEach(musclegroup =>\r\n        postMusclegroups.push(musclegroup.name)\r\n      ));\r\n    }\r\n    else if (post.musclegroups) {\r\n      postExercises.push(post.title);\r\n      post.musclegroups.forEach(musclegroup =>\r\n        postMusclegroups.push(musclegroup.name)\r\n      );\r\n    }\r\n    this.state.selectedFilters.forEach(a =>\r\n      (postExercises.includes(a) || postMusclegroups.includes(a)) ? '' : match = false\r\n    );\r\n    return match;\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loadingMusclegroups || this.state.loadingExercises || this.state.loadingWorkouts) {\r\n      return (      <div>\r\n        <div className={styles.feedContainer}><SpinnerPost /></div></div>)\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.mainHeader}><h1>{this.props.user.username ? 'Hei, '+this.props.user.username+'!' : 'Velkommen!'}</h1></div>\r\n          <NewExercise reFetch={() => this.buildFeed()} user={this.props.user} isCreating={this.props.creatingNewExercise}/>\r\n          <NewWorkout reFetch={() => this.buildFeed()} user={this.props.user} isCreating={this.props.creatingNewWorkout}/>         \r\n          <div className={styles.feed}>\r\n          {!this.props.hiddenWorkouts ?\r\n          (this.state.selectedFilters.length === 0\r\n              ? this.state.workouts.slice(0, 2).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))\r\n              : this.state.workouts.map(post =>\r\n                  this.checkSelectedFilters(post) ? (\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Post\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                      />{\" \"}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )\r\n                )) : ''}\r\n          </div>\r\n        </div>\r\n        <div className={styles.feedContainer}>\r\n          <div className={styles.feed}>\r\n            {!this.state.loading ? (\r\n              <div>\r\n               {!this.props.hiddenExercises ? \r\n                this.state.selectedFilters.length === 0 ? (\r\n               <div className={styles.cardContainer}>\r\n                  <div className={this.state.scroller !== 0 ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller !== 0 ? this.setState({scroller: this.state.scroller - 3}) : ''}>{\"<\"}</div>\r\n                  {this.state.exercises.slice(this.state.scroller, this.state.scroller+3).map(post => (\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Card\r\n                        url={post.url}\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                        sets={post.sets}\r\n                        reps={post.reps}\r\n                      />\r\n                    </div>))}\r\n                <div className={ this.state.scroller+3 < this.state.exercises.length ? styles.arrow : styles.arrowDisabled} onClick={() => this.state.scroller+4 < this.state.exercises.length ? this.setState({scroller: this.state.scroller + 3}) : ''}>{\">\"}</div>\r\n             </div>) : \r\n                  this.state.exercises.map(post => (\r\n                    this.checkSelectedFilters(post) ?\r\n                    <div onClick={() => this.props.singlePost(post)}>\r\n                      <Post\r\n                        url={post.url}\r\n                        user={post.user}\r\n                        date={post.date}\r\n                        title={post.title}\r\n                        image={post.image}\r\n                        content={post.content}\r\n                        sets={post.sets}\r\n                        reps={post.reps}\r\n                        exercise\r\n                      />\r\n                    </div> : ''\r\n                  )\r\n                ) : ''}\r\n               { this.state.selectedFilters.length === 0 && !this.props.hiddenWorkouts && this.state.workouts.slice(2).map(post => (\r\n                  <div onClick={() => this.props.singlePost(post)}>\r\n                    <Post\r\n                      user={post.user}\r\n                      date={post.date}\r\n                      title={post.title}\r\n                      image={post.image}\r\n                      content={post.content}\r\n                    />\r\n                  </div>\r\n                ))}{\" \"}\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={styles.footer}> ExerciseIt ©   •   estb. 2020 </div>\r\n        <div className={styles.filterContainer}>\r\n      <input \r\n      placeholder=\"Filtrer på muskelgrupper og øvelser\"\r\n      name=\"Filter\"\r\n      autocomplete=\"off\"\r\n      value={this.state.filter.charAt(0).toUpperCase() + this.state.filter.slice(1)}\r\n      onChange={change => this.setState({ filter: change.target.value })}\r\n      className={this.filterFound() ? styles.filterEnabled : styles.filterDisabled}\r\n      onKeyPress={event =>\r\n                  event.key === \"Enter\" ? this.addFilter() : \"\"\r\n                }/>\r\n            <button\r\n                  disabled={!this.filterFound()}\r\n                  onClick={() => this.addFilter()}\r\n                  className={\r\n                    this.filterFound()\r\n                      ? styles.buttonFilter\r\n                      : styles.buttonFilterDisabled\r\n                  }\r\n                >\r\n                  Legg til\r\n                </button>\r\n      {this.state.selectedFilters.map(filter =>\r\n      <div className={styles.filterList} onClick={() => this.removeFilter(filter)} >{filter}</div>)}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feed;\r\n"]},"metadata":{},"sourceType":"module"}